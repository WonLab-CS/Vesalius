[{"path":[]},{"path":"wonlab-cs.github.io/Vesalius/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"wonlab-cs.github.io/Vesalius/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"wonlab-cs.github.io/Vesalius/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"wonlab-cs.github.io/Vesalius/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"wonlab-cs.github.io/Vesalius/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement . complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"wonlab-cs.github.io/Vesalius/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"wonlab-cs.github.io/Vesalius/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"wonlab-cs.github.io/Vesalius/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"wonlab-cs.github.io/Vesalius/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"wonlab-cs.github.io/Vesalius/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"wonlab-cs.github.io/Vesalius/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.0, available https://www.contributor-covenant.org/version/2/0/code_of_conduct.html. Community Impact Guidelines inspired Mozilla’s code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"vesalius-quick-start","dir":"Articles","previous_headings":"","what":"Vesalius: Quick Start","title":"Vesalius: Quick Start","text":"like live fast lane? sigh every time see long vignette? wish TLDR everything? understand. Welcome Vesalius quick start! vignette, find short guide work Vesalius. Vesalius provides internal data set taken real Spatial transcrtiptomic data. show context Vesalius workflows articles section. intents purposes, dummy data set used get feel Vesalius package. strongly advise use real complete data sets fully understand Vesalius package benefits.","code":""},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Vesalius: Quick Start","text":"Vesalius tool perform high-resolution silico anatomization molecular characterization Spatial omices data without requiring companion images. nature vesalius algorithm makes condusive using various spatial omics modalities without requiuring substantial changes. Vesalius achieves converting reducded dimensionality latent space gray scale images (one dimension). images processed using various image analysis techniques smoothing segmentation.","code":""},{"path":[]},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"loading-data","dir":"Articles","previous_headings":"Loading & building a vesalius assay","what":"Loading data","title":"Vesalius: Quick Start","text":"First, let’s load package data. Data originates slide-seqV2 data (availble Single Cell Portal). took small subset mouse hippocampus centered around Dentate Gyrus. , show example using transcriptomic data principles apply modalities. examples using modalities, please refer articles.","code":"suppressMessages(library(vesalius)) library(patchwork) library(ggplot2) data(vesalius, package = \"vesalius\")"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"what-do-we-have","dir":"Articles","previous_headings":"Loading & building a vesalius assay > Loading data","what":"What do we have?","title":"Vesalius: Quick Start","text":"loaded two new variables: counts cooridnates. counts gene counts genes. per convention, columns r epresent spatial indices (barcodes, spots, beads,…) rows genes captured. coordinates represent x y coordinates spatial index. modalities, count matrices still required vesalius run. example, Spatial-ATAC-seq Spatial-cut&tag can converted count matrices (specifically tile matrices) using ArchR package","code":"str(counts) ## Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots ##   ..@ i       : int [1:653622] 4 8 10 15 18 19 30 38 41 51 ... ##   ..@ p       : int [1:1053] 0 2982 6344 9623 12651 15540 18593 21462 24241 26859 ... ##   ..@ Dim     : int [1:2] 15932 1052 ##   ..@ Dimnames:List of 2 ##   .. ..$ : chr [1:15932] \"0610005C13Rik\" \"0610007P14Rik\" \"0610009B22Rik\" \"0610009E02Rik\" ... ##   .. ..$ : chr [1:1052] \"CTCCAGCCTTGCAT\" \"AACCCCAAGGTAAT\" \"GCCCAACACACTTT\" \"GTCCAGAGTCTTAT\" ... ##   ..@ x       : num [1:653622] 1 4 1 2 2 2 2 1 1 1 ... ##   ..@ factors : list() str(coordinates) ## 'data.frame':    1052 obs. of  3 variables: ##  $ barcodes: chr  \"CTCCAGCCTTGCAT\" \"AACCCCAAGGTAAT\" \"GCCCAACACACTTT\" \"GTCCAGAGTCTTAT\" ... ##  $ xcoord  : num  3536 3472 3634 3589 3535 ... ##  $ ycoord  : num  3485 3410 3636 3257 3352 ..."},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"building-a-vesalius-assay","dir":"Articles","previous_headings":"Loading & building a vesalius assay","what":"Building a Vesalius assay","title":"Vesalius: Quick Start","text":"can build vesalius assay simply parsing counts cooridnates (vesalius assay contructor)[link manual page].","code":"vesalius <- build_vesalius_assay(   coordinates = coordinates, # spatial coordinates   counts  = counts, # count matrix   assay = \"spatial_omics\", # name you wish to give your assay   verbose = FALSE # Do you want progress messages? )"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"what-do-we-have-1","dir":"Articles","previous_headings":"Loading & building a vesalius assay > Building a Vesalius assay","what":"What do we have?","title":"Vesalius: Quick Start","text":"vesalius object container requires least spatial indices. , parsed counts spatial indices Count matrices can added sperately using add_counts function.","code":"vesalius ## #--------------------------------------------------------------------------------#  ## spatial_omics as vesalius assay containing: ##  ## 1 modifications applied to base object.  ##  ## 1052 spatial indices.  ##  ## 15932 observations in the raw count matrix.  ## #--------------------------------------------------------------------------------#"},{"path":[]},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"embed-latent-space","dir":"Articles","previous_headings":"Embedding latent space into gray scale images","what":"Embed Latent Space","title":"Vesalius: Quick Start","text":"can use object top embed latent space grey scale images.","code":"vesalius <- generate_embeddings(vesalius,   dim_reduction = \"PCA\",   normalization = \"log_norm\",   nfeatures = 100, # Setting number of features low for low run time   verbose = FALSE)"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"what-do-we-have-2","dir":"Articles","previous_headings":"Embedding latent space into gray scale images > Embed Latent Space","what":"What do we have?","title":"Vesalius: Quick Start","text":"see added set embedding one used one default embedding called “active” embedding. See section understanding active embeddings.","code":"## #--------------------------------------------------------------------------------#  ## spatial_omics as vesalius assay containing: ##  ## 3 modifications applied to base object.  ##  ## 1052 spatial indices used to form pixel tiles.  ##  ## 15932 observations in the log_norm count matrix.  ##  ## PCA as embeddings.  ## with PCA as active embedding.  ## #--------------------------------------------------------------------------------#"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"testing-multiple-embeddings","dir":"Articles","previous_headings":"Embedding latent space into gray scale images","what":"Testing multiple embeddings","title":"Vesalius: Quick Start","text":"can test multiple embeddings every trial stored vesalius_assay object. Every time run new dimensionality reduction approach appended previous ones. Vesalius thing different normalisation approaches. lets decided combination want use later stages. Note since might want use embedding , end one embedding called “PCA” example. case, embedding normalisation unique name. every subsequent embedding called PCA, trial name PCA.1, PCA.2 etc applies embedding normalisation method select.","code":"vesalius <- generate_embeddings(vesalius,   dim_reduction = \"UMAP\",   nfeatures = 100, # Setting number of features low for low run time   verbose = FALSE)  vesalius <- generate_embeddings(vesalius,   dim_reduction = \"PCA\",   nfeatures = 200, # Setting number of features low for low run time   verbose = FALSE)  vesalius <- generate_embeddings(vesalius,   dim_reduction = \"PCA\",   verbose = FALSE)"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"what-do-we-have-3","dir":"Articles","previous_headings":"Embedding latent space into gray scale images > Testing multiple embeddings","what":"What do we have ?","title":"Vesalius: Quick Start","text":"can also add embeddings appended vesalius similar manner. can also check manual page add_embeddings","code":"vesalius ## #--------------------------------------------------------------------------------#  ## spatial_omics as vesalius assay containing: ##  ## 6 modifications applied to base object.  ##  ## 1052 spatial indices used to form pixel tiles.  ##  ## 15932 observations in the log_norm.3 count matrix.  ##  ## 4 total embedding trials ## with PCA.2 as active embedding.  ## #--------------------------------------------------------------------------------#"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"visualising-grey-scale-images","dir":"Articles","previous_headings":"Embedding latent space into gray scale images","what":"Visualising Grey scale images","title":"Vesalius: Quick Start","text":"visualise embeddings, can simply plot vesalius object specify dimension wish view. See (imagePlot)[link page] information. Since leaving embedding argument default “last” value, can look 3 UMAP dimensions. can look simulaneously creating RGB images one dimension per color channel. wanted look “UMAP” instead, can simply specify embedding. Since used 30 dimensions UMAP, can use dimensions build RGB images.","code":"p1 <- image_plot(vesalius, dimensions = 1) + labs(title = \"Grey PCA dim 1\") p2 <- image_plot(vesalius, dimensions = seq(1, 3)) + labs(title = \"RGB PCA\") p3 <- image_plot(vesalius, dimensions = 1, embedding = \"UMAP\") +   labs(title = \"Grey UMAP dim 1\") p4 <- image_plot(vesalius, dimensions = c(1, 2, 3), embedding = \"UMAP\") +   labs(title = \"RGB UMAP dim 1, 2, and 3\") (p1 + p2) / (p3 + p4)"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"understanding-active-embeddings","dir":"Articles","previous_headings":"","what":"Understanding Active Embeddings","title":"Vesalius: Quick Start","text":"active embedding slot vesalius_assay object contains embedding values used image processing image segmentation. examples , tested multiple embeddings. see “UMAP.1” used active embedding. time embeddings used subsequent functions taken “last” embedding used. fact, subsequent function contains keyword “last” one arguments, vesalius use last target created. can mean last embedding used, last count matrix last segmentation / territory isolation / territory morphology used. unstaified results, can always call embedding trial want use explictely active slot replace fresh version embeddings choice. need re-run everything scratch! flexibility can boon, can also curse! Anytime explictely request embedding trial use fresh instance. means every time active slot updated processing may done overwritten.","code":"get_active_embedding_tag(vesalius) ## [1] \"PCA.2\""},{"path":[]},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"image-processing","dir":"Articles","previous_headings":"Image processing and Image segmentation","what":"Image Processing","title":"Vesalius: Quick Start","text":"images, can apply image processing techniques gray scale image. can apply image processing method wish order desire. Please note default number dimensions function defined seq(1,3) giving first three dimensions. working PCA, please set argument according many dimensions wish process. also alows selction abitrary PCs. example, based grey scale images, might decided better choice PCs example, explicetely requested PCA embedding. means take fresh instance PCA embedding use active embedding. specified, subsequent functions use new active embedding unless specified otherwise. However, note dimensions parsed every step. images coressponding dimensions processed. Vesalius still retains ones just case.","code":"vesalius <- regularise_image(vesalius, lambda = 1) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:34  Converting Vesalius to Image ## 2025-31-08/27/25 19:31:35  Regularising Image  ## 2025-31-08/27/25 19:31:38  Converting Images to Vesalius ## #--------------------------------------------------------------------------------# vesalius <- smooth_image(vesalius, sigma = 5, iter = 10) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:39  Converting Vesalius to Image ## 2025-31-08/27/25 19:31:39  Smoothing Image Arrays  ## 2025-31-08/27/25 19:31:40  Converting Images to Vesalius ## #--------------------------------------------------------------------------------# vesalius <- equalize_image(vesalius, sleft = 5, sright = 5) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:40  Converting Vesalius to Image ## 2025-31-08/27/25 19:31:40  Equalizing Histogram  ## 2025-31-08/27/25 19:31:41  Converting Images to Vesalius ## #--------------------------------------------------------------------------------# # Selecting a subset of PCs dims <- c(1, 3, 4, 5, 7:11)  # running smoothing o vesalius <- regularise_image(vesalius,   dimensions = dims,   embedding = \"PCA\",   verbose = FALSE) vesalius <- equalize_image(vesalius,   dimensions = dims,   verbose = FALSE) vesalius <- smooth_image(vesalius,   dimensions = dims,   iter = 10,   sigma = 1,   verbose = FALSE)"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"image-segmentation","dir":"Articles","previous_headings":"Image processing and Image segmentation","what":"Image segmentation","title":"Vesalius: Quick Start","text":"Vesalius attempts segment images color segments. Vesalius use kmeans clustering approach segment grey scale images. Note segmentation applied whole stack individually. goal top obtain colour segments can subdivived territories.","code":"vesalius <- segment_image(vesalius,   method = \"kmeans\",   col_resolution = 2,   verbose = FALSE)"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"what-do-we-have-4","dir":"Articles","previous_headings":"Image processing and Image segmentation","what":"What do we have?","title":"Vesalius: Quick Start","text":"can see vesalius_assay object now contains information related segmentation. can also look results image segmentation.  Kmeans default setting image segmentation Vesalius also provides louvain leiden based approaches.","code":"vesalius ## #--------------------------------------------------------------------------------#  ## spatial_omics as vesalius assay containing: ##  ## 10 modifications applied to base object.  ##  ## 1052 spatial indices used to form pixel tiles.  ##  ## 15932 observations in the log_norm.3 count matrix.  ##  ## 4 total embedding trials ## with PCA.2 as active embedding.  ##  ## 1 Segmentation trials.  ## 0 Territory trials.  ## 0 Morphing trials.  ## 0 Layering trials.  ## #--------------------------------------------------------------------------------# p5 <- image_plot(vesalius) + labs(title = \"Segments only\") print(p5)"},{"path":[]},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"isolating-territories-from-colour-segments","dir":"Articles","previous_headings":"Isolating territories","what":"Isolating territories from colour segments","title":"Vesalius: Quick Start","text":"final step isolate color segments seperate territories. Similar color segments may colour seperated 2D space. want able isolate patch. , can use isolate_territories function.","code":"vesalius <- isolate_territories(vesalius, capture_radius = 0.05) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:43  Pooling Segment  1  ## 2025-31-08/27/25 19:31:43  Pooling Segment  2  ## #--------------------------------------------------------------------------------#"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"what-do-we-have-5","dir":"Articles","previous_headings":"Isolating territories > Isolating territories from colour segments","what":"What do we have?","title":"Vesalius: Quick Start","text":"Now can look isolated territories. can keep track many instances image segmentation image manipulation gone .","code":"vesalius ## #--------------------------------------------------------------------------------#  ## spatial_omics as vesalius assay containing: ##  ## 11 modifications applied to base object.  ##  ## 1052 spatial indices used to form pixel tiles.  ##  ## 15932 observations in the log_norm.3 count matrix.  ##  ## 4 total embedding trials ## with PCA.2 as active embedding.  ##  ## 1 Segmentation trials.  ## 1 Territory trials.  ## 0 Morphing trials.  ## 0 Layering trials.  ## #--------------------------------------------------------------------------------#"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"visualizing-territories","dir":"Articles","previous_headings":"Isolating territories","what":"Visualizing Territories","title":"Vesalius: Quick Start","text":"can plot territories using vesalius plotting functions. Note ggplot object customisable using ggplot2 functionalities.","code":"p6 <- territory_plot(vesalius, cex_pt = 3.5) p6"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"comparing-territories","dir":"Articles","previous_headings":"","what":"Comparing territories","title":"Vesalius: Quick Start","text":"territories, can compare expression genes territories. finally can visualise expression genes interest. can parse one gene. show overall expression profile Malat1 also mean expression territory.","code":"vesalius <- identify_markers(vesalius, seed = 1, query = 2) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:45 ===> Computing DEGs in spatial_omics <=== ## 2025-31-08/27/25 19:31:45 ===> 1 VS 2 <===  ## #--------------------------------------------------------------------------------# deg <- get_markers(vesalius) p7 <- view_gene_expression(vesalius, genes = \"Malat1\") p8 <- view_gene_expression(vesalius, genes = \"Malat1\", as_layer = TRUE) p7 + p8"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"mapping-cells-across-samples","dir":"Articles","previous_headings":"","what":"Mapping Cells across samples","title":"Vesalius: Quick Start","text":"Another key features Vesalius able map cells across samples. , show quick break achieve . depth view cell mapping available Vesalius analysis repository","code":""},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"mapping-cells","dir":"Articles","previous_headings":"Mapping Cells across samples","what":"Mapping cells","title":"Vesalius: Quick Start","text":"First, build 2 vesalius objects process independantly. jitter territory original version flipped coordinates, added noise coordinates counts, remove randomly sampled locations. Next, can proceed mapping cells . run mapping using cell (feature), niche, territory similarity cell composition. mapping produces new vesalius object mapped coordinates query data set. case query jitter_ves. , can treat new object frech data sets new coordinates. : can look resulting embeddings  can also look new territories.","code":"# load vesalius data  data(vesalius)  # Create Vesalius object for processing vesalius <- build_vesalius_assay(coordinates, counts) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:46  Checking Coordinates in spatial_omics  ## 2025-31-08/27/25 19:31:46  Checking Counts in spatial_omics  ## 2025-31-08/27/25 19:31:46  Calculating Assay scale from coordinates ## #--------------------------------------------------------------------------------# cells <- sample(LETTERS[1:6], size = nrow(vesalius@tiles),replace =T) names(cells) <- vesalius@tiles$barcodes vesalius <- add_cells(vesalius, cells = cells, add_name = \"Cells\") ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:46  Adding cell labels to Cells territory column in spatial_omics  ## #--------------------------------------------------------------------------------# jitter_ves <- build_vesalius_assay(jitter_coord, jitter_counts) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:46  Checking Coordinates in spatial_omics  ## 2025-31-08/27/25 19:31:47  Checking Counts in spatial_omics  ## 2025-31-08/27/25 19:31:47  Calculating Assay scale from coordinates ## #--------------------------------------------------------------------------------# cells <- sample(LETTERS[1:6], size = nrow(jitter_ves@tiles),replace =T) names(cells) <- jitter_ves@tiles$barcodes jitter_ves <- add_cells(jitter_ves, cells = cells, add_name = \"Cells\") ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:47  Adding cell labels to Cells territory column in spatial_omics  ## #--------------------------------------------------------------------------------# vesalius <- generate_embeddings(vesalius,     filter_threshold = 1,     filter_grid = 1) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:47 ===> Generating Tiles in spatial_omics <=== ## 2025-31-08/27/25 19:31:47  Generating Voronoi Tesselation  ## 2025-31-08/27/25 19:31:47  Filtering Tiles ## 2025-31-08/27/25 19:31:47  Rasterising Tiles  ## 2025-31-08/27/25 19:31:50  Adjusting count matrix ## 2025-31-08/27/25 19:31:50 ===> Pre-processing counts in spatial_omics <=== ## 2025-31-08/27/25 19:31:52 ===> Compute Latent Space in spatial_omics <=== ## 2025-31-08/27/25 19:31:52  Running Principal Component Analysis  ## 2025-31-08/27/25 19:31:53  Converting PCA Embedding Values to gray scale  ## #--------------------------------------------------------------------------------# vesalius <- smooth_image(vesalius, embedding = \"PCA\", sigma = 5, iter = 10) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:53  Converting Vesalius to Image ## 2025-31-08/27/25 19:31:54  Smoothing Image Arrays  ## 2025-31-08/27/25 19:31:54  Converting Images to Vesalius ## #--------------------------------------------------------------------------------# vesalius <- equalize_image(vesalius, sleft = 5, sright = 5) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:55  Converting Vesalius to Image ## 2025-31-08/27/25 19:31:55  Equalizing Histogram  ## 2025-31-08/27/25 19:31:56  Converting Images to Vesalius ## #--------------------------------------------------------------------------------# vesalius <- segment_image(vesalius, col_resolution = 2) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:56  Segmenting Image using kmeans  ## #--------------------------------------------------------------------------------# vesalius <- isolate_territories(vesalius) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:56  Pooling Segment  1  ## 2025-31-08/27/25 19:31:56  Pooling Segment  2  ## #--------------------------------------------------------------------------------# jitter_ves <- generate_embeddings(jitter_ves,     filter_threshold = 1,     filter_grid = 1) ## #--------------------------------------------------------------------------------#  ## 2025-31-08/27/25 19:31:56 ===> Generating Tiles in spatial_omics <=== ## 2025-31-08/27/25 19:31:56  Generating Voronoi Tesselation  ## 2025-31-08/27/25 19:31:56  Filtering Tiles ## 2025-31-08/27/25 19:31:56  Rasterising Tiles  ## 2025-31-08/27/25 19:31:58  Adjusting count matrix ## 2025-31-08/27/25 19:31:58 ===> Pre-processing counts in spatial_omics <=== ## 2025-32-08/27/25 19:32:03 ===> Compute Latent Space in spatial_omics <=== ## 2025-32-08/27/25 19:32:03  Running Principal Component Analysis  ## 2025-32-08/27/25 19:32:04  Converting PCA Embedding Values to gray scale  ## #--------------------------------------------------------------------------------# jitter_ves <- smooth_image(jitter_ves, embedding = \"PCA\", sigma = 5, iter = 10) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:04  Converting Vesalius to Image ## 2025-32-08/27/25 19:32:05  Smoothing Image Arrays  ## 2025-32-08/27/25 19:32:06  Converting Images to Vesalius ## #--------------------------------------------------------------------------------# jitter_ves <- equalize_image(jitter_ves, sleft = 5, sright = 5) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:06  Converting Vesalius to Image ## 2025-32-08/27/25 19:32:07  Equalizing Histogram  ## 2025-32-08/27/25 19:32:07  Converting Images to Vesalius ## #--------------------------------------------------------------------------------# jitter_ves <- segment_image(jitter_ves, col_resolution = 2) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:07  Segmenting Image using kmeans  ## #--------------------------------------------------------------------------------# jitter_ves <- isolate_territories(jitter_ves) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:07  Pooling Segment  1  ## 2025-32-08/27/25 19:32:07  Pooling Segment  2  ## #--------------------------------------------------------------------------------# matched <- map_assays(vesalius,     jitter_ves,     threshold = 0,     use_cost = c(\"feature\",\"niche\",\"territory\",\"composition\"),     batch_size = 500,     epoch = 5,     jitter = 1) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:07  Extracting assay signal ## 2025-32-08/27/25 19:32:07  Computing Feature cost in spatial_omics  ## 2025-32-08/27/25 19:32:08  Getting Neighborhoods in spatial_omics  ## 2025-32-08/27/25 19:32:08  Computing Neighborhood cost in spatial_omics  ## 2025-32-08/27/25 19:32:09  Computing Territory cost in spatial_omics  ## 2025-32-08/27/25 19:32:11  Computing Niche Composition Index in spatial_omics  ## 2025-32-08/27/25 19:32:16  Filtering Cost Matrices  ## 2025-32-08/27/25 19:32:16  Mapping query to seed - Epoch =  1  ## 2025-32-08/27/25 19:32:17  Mapping query to seed - Epoch =  2  ## 2025-32-08/27/25 19:32:17  Mapping query to seed - Epoch =  3  ## 2025-32-08/27/25 19:32:17  Mapping query to seed - Epoch =  4  ## 2025-32-08/27/25 19:32:17  Mapping query to seed - Epoch =  5  ## 2025-32-08/27/25 19:32:17  Filtering Mapped Indices  ## #--------------------------------------------------------------------------------# matched <- generate_embeddings(matched,     dim_reduction = \"PCA\",   nfeatures = 200,    verbose = FALSE) matched <- smooth_image(matched, sigma = 5, iter = 10) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:25  Converting Vesalius to Image ## 2025-32-08/27/25 19:32:26  Smoothing Image Arrays  ## 2025-32-08/27/25 19:32:26  Converting Images to Vesalius ## #--------------------------------------------------------------------------------# matched <- equalize_image(matched, sleft = 5, sright = 5) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:26  Converting Vesalius to Image ## 2025-32-08/27/25 19:32:27  Equalizing Histogram  ## 2025-32-08/27/25 19:32:27  Converting Images to Vesalius ## #--------------------------------------------------------------------------------# matched <- segment_image(matched,col_resolution = 2) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:27  Segmenting Image using kmeans  ## #--------------------------------------------------------------------------------# m <- image_plot(vesalius) m1 <- image_plot(jitter_ves) m2 <- image_plot(matched)  m + m1 + m2 t <- territory_plot(vesalius) t1 <- territory_plot(jitter_ves) t2 <- territory_plot(matched) t + t1 + t2"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"integrating-data-sets","dir":"Articles","previous_headings":"Mapping Cells across samples","what":"Integrating data sets","title":"Vesalius: Quick Start","text":"data sets new set coordinates, can integrate data sets obtain integrate mapping object upon can perform differential gene expression analysis. Since data set now contains integrated latent space, can also call territories object. need create new embeddings. provided integration. can view resulting embeddings territories.","code":"inter <- integrate_assays(matched,     vesalius) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:33  Intergrating Counts ## Warning: The `slot` argument of `GetAssayData()` is deprecated as of SeuratObject 5.0.0. ## ℹ Please use the `layer` argument instead. ## ℹ The deprecated feature was likely used in the Seurat package. ##   Please report the issue at <https://github.com/satijalab/seurat/issues>. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. ## Warning: The `slot` argument of `SetAssayData()` is deprecated as of SeuratObject 5.0.0. ## ℹ Please use the `layer` argument instead. ## ℹ The deprecated feature was likely used in the Seurat package. ##   Please report the issue at <https://github.com/satijalab/seurat/issues>. ## This warning is displayed once every 8 hours. ## Call `lifecycle::last_lifecycle_warnings()` to see where this warning was ## generated. ## Warning in merge_coordinates(mapped, reference, ## rownames(integrated$integrated)): No duplicated coordinates allowed - Adding ## noise! ## 2025-32-08/27/25 19:32:42 ===> Generating Tiles in spatial_omics <=== ## 2025-32-08/27/25 19:32:42  Generating Voronoi Tesselation  ## 2025-32-08/27/25 19:32:42  Filtering Tiles ## 2025-32-08/27/25 19:32:42  Rasterising Tiles  ## 2025-32-08/27/25 19:32:46  Adjusting count matrix ## 2025-32-08/27/25 19:32:46  Setting integrated as active embedding  ## 2025-32-08/27/25 19:32:46  Setting inferred as active count matrix  ## #--------------------------------------------------------------------------------# inter <- smooth_image(inter, sigma = 5, iter = 10) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:46  Converting Vesalius to Image ## 2025-32-08/27/25 19:32:47  Smoothing Image Arrays  ## 2025-32-08/27/25 19:32:47  Converting Images to Vesalius ## #--------------------------------------------------------------------------------# inter <- equalize_image(inter, sleft = 5, sright = 5) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:47  Converting Vesalius to Image ## 2025-32-08/27/25 19:32:48  Equalizing Histogram  ## 2025-32-08/27/25 19:32:48  Converting Images to Vesalius ## #--------------------------------------------------------------------------------# inter <- segment_image(inter, col_resolution = 2) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:48  Segmenting Image using kmeans  ## #--------------------------------------------------------------------------------# i <- image_plot(inter) i1 <- territory_plot(inter)  i + i1"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"deg-analysis-between-samples","dir":"Articles","previous_headings":"Mapping Cells across samples","what":"DEG analysis between samples","title":"Vesalius: Quick Start","text":"Finally, can look DEG analysis samples specific territories.","code":"inter <- identify_markers(inter, sample = TRUE) ## #--------------------------------------------------------------------------------#  ## 2025-32-08/27/25 19:32:50  No territory Specified - Comparing all territories ## 2025-32-08/27/25 19:32:50 ===> Computing DEGs in spatial_omics <=== ## 2025-32-08/27/25 19:32:50 ===> 1_reference VS remaining_matched <===  ## 2025-32-08/27/25 19:32:51 ===> 2_reference VS remaining_matched <===  ## #--------------------------------------------------------------------------------# degs <- get_markers(inter) head(degs) ##         genes       p_value   p_value_adj  seed_pct query_pct fold_change ## Lrrtm4 Lrrtm4 1.128087e-128 2.933026e-126 0.5000000 0.9772152  -0.9777009 ## Kcnip4 Kcnip4 7.078359e-121 1.755433e-118 0.7006079 0.9974684  -0.8918530 ## Lsamp   Lsamp  7.834842e-51  1.410272e-49 1.0000000 1.0000000  -0.4371347 ## Kcnd2   Kcnd2 1.047206e-116 2.471407e-114 0.3465046 0.9367089  -0.7452150 ## Dlg2     Dlg2 6.357439e-102  1.176126e-99 0.5851064 0.9924051  -0.6055463 ## Grin2a Grin2a 1.782065e-122 4.472983e-120 0.4498480 0.9696203  -0.8289342 ##        effect_size        seed             query ## Lrrtm4    1.409704 1_reference remaining_matched ## Kcnip4    1.409704 1_reference remaining_matched ## Lsamp     1.008041 1_reference remaining_matched ## Kcnd2     1.409704 1_reference remaining_matched ## Dlg2      1.409704 1_reference remaining_matched ## Grin2a    1.409704 1_reference remaining_matched"},{"path":"wonlab-cs.github.io/Vesalius/articles/vesalius.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session Info","title":"Vesalius: Quick Start","text":"","code":"sessionInfo() ## R version 4.5.1 (2025-06-13) ## Platform: x86_64-pc-linux-gnu ## Running under: Ubuntu 24.04.2 LTS ##  ## Matrix products: default ## BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  ## LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.26.so;  LAPACK version 3.12.0 ##  ## locale: ##  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        ##  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    ##  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           ## [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    ##  ## time zone: UTC ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] future_1.67.0   ggplot2_3.5.2   patchwork_1.3.2 vesalius_2.0.0  ##  ## loaded via a namespace (and not attached): ##   [1] RcppAnnoy_0.0.22            splines_4.5.1               ##   [3] later_1.4.3                 bitops_1.0-9                ##   [5] R.oo_1.27.1                 tibble_3.3.0                ##   [7] polyclip_1.10-7             fastDummies_1.7.5           ##   [9] lifecycle_1.0.4             Rdpack_2.6.4                ##  [11] rstatix_0.7.2               edgeR_4.6.3                 ##  [13] globals_0.18.0              lattice_0.22-7              ##  [15] MASS_7.3-65                 readbitmap_0.1.5            ##  [17] backports_1.5.0             magrittr_2.0.3              ##  [19] limma_3.64.3                plotly_4.11.0               ##  [21] sass_0.4.10                 rmarkdown_2.29              ##  [23] jquerylib_0.1.4             yaml_2.3.10                 ##  [25] httpuv_1.6.16               Seurat_5.3.0                ##  [27] sctransform_0.4.2           spam_2.11-1                 ##  [29] sp_2.2-0                    spatstat.sparse_3.1-0       ##  [31] reticulate_1.43.0           cowplot_1.2.0               ##  [33] pbapply_1.7-4               RColorBrewer_1.1-3          ##  [35] abind_1.4-8                 R.cache_0.17.0              ##  [37] Rtsne_0.17                  GenomicRanges_1.60.0        ##  [39] R.utils_2.13.0              purrr_1.1.0                 ##  [41] RCurl_1.98-1.17             imagerExtra_1.3.2           ##  [43] BiocGenerics_0.54.0         GenomeInfoDbData_1.2.14     ##  [45] IRanges_2.42.0              S4Vectors_0.46.0            ##  [47] ggrepel_0.9.6               irlba_2.3.5.1               ##  [49] kohonen_3.0.12              listenv_0.9.1               ##  [51] spatstat.utils_3.1-5        goftest_1.2-3               ##  [53] RSpectra_0.16-2             spatstat.random_3.4-1       ##  [55] fitdistrplus_1.2-4          parallelly_1.45.1           ##  [57] pkgdown_2.1.3               codetools_0.2-20            ##  [59] DelayedArray_0.34.1         RcppRoll_0.3.1              ##  [61] tidyselect_1.2.1            UCSC.utils_1.4.0            ##  [63] farver_2.1.2                imager_1.0.5                ##  [65] matrixStats_1.5.0           stats4_4.5.1                ##  [67] spatstat.explore_3.5-2      jsonlite_2.0.0              ##  [69] progressr_0.15.1            Formula_1.2-5               ##  [71] bmp_0.3                     ggridges_0.5.6              ##  [73] survival_3.8-3              systemfonts_1.2.3           ##  [75] TreeTools_1.16.1            tools_4.5.1                 ##  [77] ggnewscale_0.5.2            ragg_1.4.0                  ##  [79] ica_1.0-3                   Rcpp_1.1.0                  ##  [81] glue_1.8.0                  gridExtra_2.3               ##  [83] SparseArray_1.8.1           xfun_0.53                   ##  [85] DESeq2_1.48.1               MatrixGenerics_1.20.0       ##  [87] GenomeInfoDb_1.44.2         dplyr_1.1.4                 ##  [89] withr_3.0.2                 fastmap_1.2.0               ##  [91] shinyjs_2.1.0               digest_0.6.37               ##  [93] R6_2.6.1                    mime_0.13                   ##  [95] colorspace_2.1-1            textshaping_1.0.1           ##  [97] scattermore_1.2             tensor_1.5.1                ##  [99] jpeg_0.1-11                 spatstat.data_3.1-8         ## [101] R.methodsS3_1.8.2           tidyr_1.3.1                 ## [103] generics_0.1.4              data.table_1.17.8           ## [105] httr_1.4.7                  htmlwidgets_1.6.4           ## [107] S4Arrays_1.8.1              uwot_0.2.3                  ## [109] pkgconfig_2.0.3             gtable_0.3.6                ## [111] lmtest_0.9-40               XVector_0.48.0              ## [113] htmltools_0.5.8.1           carData_3.0-5               ## [115] pwr_1.3-0                   dotCall64_1.2               ## [117] fftwtools_0.9-11            SeuratObject_5.1.0          ## [119] scales_1.4.0                Biobase_2.68.0              ## [121] png_0.1-8                   spatstat.univar_3.1-4       ## [123] tvR_0.3.2                   knitr_1.50                  ## [125] Signac_1.15.0               reshape2_1.4.4              ## [127] nlme_3.1-168                cachem_1.1.0                ## [129] zoo_1.8-14                  stringr_1.5.1               ## [131] KernSmooth_2.23-26          parallel_4.5.1              ## [133] miniUI_0.1.2                desc_1.4.3                  ## [135] infix_0.1.0                 pillar_1.11.0               ## [137] grid_4.5.1                  vctrs_0.6.5                 ## [139] TreeDist_2.10.1             RANN_2.6.2                  ## [141] PlotTools_0.3.1             promises_1.3.3              ## [143] ggpubr_0.6.1                car_3.1-3                   ## [145] xtable_1.8-4                cluster_2.1.8.1             ## [147] evaluate_1.0.4              cli_3.6.5                   ## [149] locfit_1.5-9.12             compiler_4.5.1              ## [151] Rsamtools_2.24.0            rlang_1.1.6                 ## [153] crayon_1.5.3                future.apply_1.20.0         ## [155] ggsignif_0.6.4              labeling_0.4.3              ## [157] plyr_1.8.9                  fs_1.6.6                    ## [159] stringi_1.8.7               viridisLite_0.4.2           ## [161] deldir_2.0-4                BiocParallel_1.42.1         ## [163] Biostrings_2.76.0           tiff_0.1-12                 ## [165] lazyeval_0.2.2              spatstat.geom_3.5-0         ## [167] Matrix_1.7-3                RcppHNSW_0.6.0              ## [169] bit64_4.6.0-1               statmod_1.5.0               ## [171] shiny_1.11.1                SummarizedExperiment_1.38.1 ## [173] rbibutils_2.3               ROCR_1.0-11                 ## [175] igraph_2.1.4                broom_1.0.9                 ## [177] bslib_0.9.0                 fastmatch_1.1-6             ## [179] bit_4.6.0                   ape_5.8-1"},{"path":"wonlab-cs.github.io/Vesalius/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Patrick C.N. Martin. Maintainer.","code":""},{"path":"wonlab-cs.github.io/Vesalius/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Martin et al. Vesalius: high-resolution silico anatomization spatial transcriptomic data using image analysis. Molecular Systems Biology (2022) [Vesalius 1.0.0]","code":"@Article{,   author = {Patrick C N Martin and Hyobin Kim and Cecilia Lövkvist and Byung-Woo Hong and Kyoung Jae Won},   title = {Vesalius: high-resolution in silico anatomization of spatial transcriptomic data using image analysis},   journal = {Molecular Systems Biology},   volume = {18},   number = {9},   pages = {e11080},   keywords = {anatomical territories, spatial domains, spatial transcriptomics, tissue architecture, tissue heterogeneity},   doi = {https://doi.org/10.15252/msb.202211080},   url = {https://www.embopress.org/doi/abs/10.15252/msb.202211080},   eprint = {https://www.embopress.org/doi/pdf/10.15252/msb.202211080},   abstract = {Abstract Characterization of tissue architecture promises to deliver insights into development, cell communication, and disease. In silico spatial domain retrieval methods have been developed for spatial transcriptomics (ST) data assuming transcriptional similarity of neighboring barcodes. However, domain retrieval approaches with this assumption cannot work in complex tissues composed of multiple cell types. This task becomes especially challenging in cellular resolution ST methods. We developed Vesalius to decipher tissue anatomy from ST data by applying image processing technology. Vesalius uniquely detected territories composed of multiple cell types and successfully recovered tissue structures in high-resolution ST data including in mouse brain, embryo, liver, and colon. Utilizing this tissue architecture, Vesalius identified tissue morphology-specific gene expression and regional specific gene expression changes for astrocytes, interneuron, oligodendrocytes, and entorhinal cells in the mouse brain.},   year = {2022}, }"},{"path":"wonlab-cs.github.io/Vesalius/index.html","id":"vesalius","dir":"","previous_headings":"","what":"Vesalius: Dissecting Tissue Anatomy from Spatial Transcriptomic Data","title":"Vesalius: Dissecting Tissue Anatomy from Spatial Transcriptomic Data","text":"Welcome Vesalius GitHub page!","code":""},{"path":"wonlab-cs.github.io/Vesalius/index.html","id":"what-is-vesalius-","dir":"","previous_headings":"","what":"What is Vesalius ?","title":"Vesalius: Dissecting Tissue Anatomy from Spatial Transcriptomic Data","text":"Vesalius R package decipher tissue anatomy embracing various image analysis techniques high-resolution ST data. Vesalius identifies spatially expressed genes linked morphology tissue structures.","code":""},{"path":"wonlab-cs.github.io/Vesalius/index.html","id":"how-to-install-vesalius","dir":"","previous_headings":"","what":"How to install Vesalius?","title":"Vesalius: Dissecting Tissue Anatomy from Spatial Transcriptomic Data","text":"Vesalius requires R 4.0.0 higher. list dependencies can found DESCRIPTION FILE. devtools already installed, please beforehand. Ensure library loaded Install Vesalius via GitHub","code":"install.packages(\"devtools\") library(devtools) install_github(\"WonLab-CS/Vesalius\")"},{"path":"wonlab-cs.github.io/Vesalius/index.html","id":"how-to-use-vesalius","dir":"","previous_headings":"","what":"How to use Vesalius?","title":"Vesalius: Dissecting Tissue Anatomy from Spatial Transcriptomic Data","text":"Vesalius provides internal data set taken real Spatial Transcriptomic data. can used dummy data set get feel Vesalius workflow. run time data sets exceed minute. “Quick Start” guide can found depth examples can found Vesalius Analysis Page Vesalius tested : macOS Sequoia 15.0 Red Hat Enterprise Linux 8.5 (Ootpa)","code":""},{"path":"wonlab-cs.github.io/Vesalius/index.html","id":"whats-next","dir":"","previous_headings":"","what":"What’s next?","title":"Vesalius: Dissecting Tissue Anatomy from Spatial Transcriptomic Data","text":"Vesalius package early stage development. ask share us bugs, concerns, features wish see implemented. Please open GitHub issue send email Patrick Martin (Patrick.Martin@cshs.org)","code":""},{"path":"wonlab-cs.github.io/Vesalius/index.html","id":"archived-analysis","dir":"","previous_headings":"","what":"Archived Analysis","title":"Vesalius: Dissecting Tissue Anatomy from Spatial Transcriptomic Data","text":"depth view Vesalius workflow related MSB manuscript can found .","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_active_count_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"add active count tag — add_active_count_tag","title":"add active count tag — add_active_count_tag","text":"add active count tag","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_active_count_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add active count tag — add_active_count_tag","text":"","code":"add_active_count_tag(vesalius_assay, norm)"},{"path":"wonlab-cs.github.io/Vesalius/reference/add_active_count_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add active count tag — add_active_count_tag","text":"vesalius_assay vesalius assay object norm requested count matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_active_count_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add active count tag — add_active_count_tag","text":"commented list active embedding tag","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_active_embedding_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"add active embedding tag — add_active_embedding_tag","title":"add active embedding tag — add_active_embedding_tag","text":"add active embedding tag","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_active_embedding_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add active embedding tag — add_active_embedding_tag","text":"","code":"add_active_embedding_tag(vesalius_assay, embedding)"},{"path":"wonlab-cs.github.io/Vesalius/reference/add_active_embedding_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add active embedding tag — add_active_embedding_tag","text":"vesalius_assay vesalius assay object embedding embedding","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_active_embedding_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"add active embedding tag — add_active_embedding_tag","text":"commented list active embedding tag","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Add counts to vesalius assay Adding custom count matrix to a vesalius assay object. — add_counts","title":"Add counts to vesalius assay Adding custom count matrix to a vesalius assay object. — add_counts","text":"Add counts vesalius assay Adding custom count matrix vesalius assay object.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add counts to vesalius assay Adding custom count matrix to a vesalius assay object. — add_counts","text":"","code":"add_counts(   vesalius_assay,   counts,   raw_counts = NULL,   add_name = NULL,   force = FALSE,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/add_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add counts to vesalius assay Adding custom count matrix to a vesalius assay object. — add_counts","text":"vesalius_assay vesalius assay object counts matrix sparse matrix containing normalised counts raw_counts matrix sparse matrix containing raw counts add_name character string defining name count matrix added. force logical indicating count matrix provided also used raw count matrix. verbose logical indicating progress messages outputed.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add counts to vesalius assay Adding custom count matrix to a vesalius assay object. — add_counts","text":"vesalius_assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add counts to vesalius assay Adding custom count matrix to a vesalius assay object. — add_counts","text":"case, might wish use normalisation method. case, can add matrix specify name want give count matrix. Differential gene expression tools DESeq2 edgeR require raw counts. , recommend providing raw counts well. raw counts, wish provide , can set force argument TRUE. force vesalius generate copy count matrix use \"raw\" count matrix. Since coordinates need parsed vesalius_assay contructor, function also compared count matrix coordinate data. trim count matrix based barcodes shared .","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_embeddings.html","id":null,"dir":"Reference","previous_headings":"","what":"Add embeddings Add custom embeddings to vesalius objects — add_embeddings","title":"Add embeddings Add custom embeddings to vesalius objects — add_embeddings","text":"Add embeddings Add custom embeddings vesalius objects","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_embeddings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add embeddings Add custom embeddings to vesalius objects — add_embeddings","text":"","code":"add_embeddings(vesalius_assay, embeddings, add_name = NULL, verbose = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/add_embeddings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add embeddings Add custom embeddings to vesalius objects — add_embeddings","text":"vesalius_assay vesalius_assay object embeddings matrix containing embedding values (see details) add_name character string used embedding name. verbose logical indicating progress message outputed.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_embeddings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add embeddings Add custom embeddings to vesalius objects — add_embeddings","text":"vesalius_assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/add_embeddings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add embeddings Add custom embeddings to vesalius objects — add_embeddings","text":"Vesalius objects accepts custom embedding values used generate images. embedding matrix form matrix columns latent space dimensiions rows representing spatial indices present data set. intersection spatial indices present tiles custom embeddings used. intersection applied custom embeddings filter tiles present tiles. tiles filtered. Rownames also present represent barcode name. rownames use match latent space embedding tile image.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/adjust_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"adjust count — adjust_counts","title":"adjust count — adjust_counts","text":"adjust counts reducing resolution image tensor filtering stray beads","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/adjust_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"adjust count — adjust_counts","text":"","code":"adjust_counts(coordinates, counts, throw = TRUE, verbose = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/adjust_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"adjust count — adjust_counts","text":"coordinates data frame containing coordinates reducing resolution compressing cooridnates counts count matrix throw logical - throwing warning message unshared barcodes verbose logical progress messaged outputed.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/adjust_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"adjust count — adjust_counts","text":"count matrix adjusted count values","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/adjust_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"adjust count — adjust_counts","text":"function check coordinate file see barcodes merged together. , counts adjusted taking average count value accross barcodes merged together.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/align_index.html","id":null,"dir":"Reference","previous_headings":"","what":"assign coordinates to matched indices — align_index","title":"assign coordinates to matched indices — align_index","text":"assign coordinates matched indices","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/align_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assign coordinates to matched indices — align_index","text":"","code":"align_index(matched_index, coord, jitter = 0)"},{"path":"wonlab-cs.github.io/Vesalius/reference/align_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assign coordinates to matched indices — align_index","text":"matched_index data.frame containing matching pairs coordinates seed data.frame containing seed coordinates query data.frame containing quert cooridates verbose logical - progress message outputed console","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/align_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assign coordinates to matched indices — align_index","text":"adjusted query coordinate data.frame point receives coordinates best matche seed.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/assign_centers.html","id":null,"dir":"Reference","previous_headings":"","what":"assign centroid values to active embedding — assign_centers","title":"assign centroid values to active embedding — assign_centers","text":"assign centroid values active embedding","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/assign_centers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"assign centroid values to active embedding — assign_centers","text":"","code":"assign_centers(vesalius_assay, clusters, kcenters, dimensions, ratio = NULL)"},{"path":"wonlab-cs.github.io/Vesalius/reference/assign_centers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"assign centroid values to active embedding — assign_centers","text":"vesalius_assay vesalius assy object clusters data.frame containing cluster values kcenters matrix containing centroid values dimension dimensions vector (nummeric / int) describin latent space ratio used context super pixel - spatial ration dimensiuons shouls used.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/assign_centers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"assign centroid values to active embedding — assign_centers","text":"matrix active embedding usiong color segementation","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/average_embed.html","id":null,"dir":"Reference","previous_headings":"","what":"average image stack between seed and query — average_embed","title":"average image stack between seed and query — average_embed","text":"average image stack seed query","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/average_embed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"average image stack between seed and query — average_embed","text":"","code":"average_embed(seed, query, dimensions)"},{"path":"wonlab-cs.github.io/Vesalius/reference/average_embed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"average image stack between seed and query — average_embed","text":"seed matrix - seed embedding image stack query matrix - query embedding image stack dimensions int vector describing embeddings selected","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/average_embed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"average image stack between seed and query — average_embed","text":"embedding matrix containing average pixel value seed query","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/average_embed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"average image stack between seed and query — average_embed","text":"Takes select embedding seed query creates avarage grey scale pixel values spatial location","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/back_infer.html","id":null,"dir":"Reference","previous_headings":"","what":"Infer normalized counts from shared embedding values — back_infer","title":"Infer normalized counts from shared embedding values — back_infer","text":"Infer normalized counts shared embedding values","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/back_infer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Infer normalized counts from shared embedding values — back_infer","text":"","code":"back_infer(counts, embeds)"},{"path":"wonlab-cs.github.io/Vesalius/reference/back_infer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Infer normalized counts from shared embedding values — back_infer","text":"counts list count matrices containing normalized gene expression embeds shared embedding matrix produced Seurat.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/back_infer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Infer normalized counts from shared embedding values — back_infer","text":"list containing inferred count values embeddings","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/bubble_stack.html","id":null,"dir":"Reference","previous_headings":"","what":"importFrom imager nPix — bubble_stack","title":"importFrom imager nPix — bubble_stack","text":"importFrom imager nPix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/bubble_stack.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"importFrom imager nPix — bubble_stack","text":"","code":"bubble_stack(coordinates, n_centers = 500, max_iter = 500)"},{"path":"wonlab-cs.github.io/Vesalius/reference/build_mapped_assay.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a new vesalius_assay object using mapping information — build_mapped_assay","title":"Build a new vesalius_assay object using mapping information — build_mapped_assay","text":"Build new vesalius_assay object using mapping information","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/build_mapped_assay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a new vesalius_assay object using mapping information — build_mapped_assay","text":"","code":"build_mapped_assay(mapped, seed_assay, query_assay, meta_labels, jitter = 0)"},{"path":"wonlab-cs.github.io/Vesalius/reference/build_mapped_assay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a new vesalius_assay object using mapping information — build_mapped_assay","text":"mapped mapping results (see output point_mapping) seed_assay vesalius_assay object used reference query_assay vesalius_assay mapped onto reference meta_labels character - name column transfered new object jitter numeric - much coordiate jitter added coordinates avoid duplication. 0, jitter added.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/build_mapped_assay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a new vesalius_assay object using mapping information — build_mapped_assay","text":"vesalius_assay object new coordinates.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/build_mapped_assay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Build a new vesalius_assay object using mapping information — build_mapped_assay","text":"function return vesalius_assay new coordinates mapping inforation cost. rest remain . transfering coordinates . integration.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/build_vesalius_assay.html","id":null,"dir":"Reference","previous_headings":"","what":"build vesalius assay object — build_vesalius_assay","title":"build vesalius assay object — build_vesalius_assay","text":"build simple vesalius assay object single count matrix spatial coordinate pair.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/build_vesalius_assay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"build vesalius assay object — build_vesalius_assay","text":"","code":"build_vesalius_assay(   coordinates,   counts = NULL,   image = NULL,   assay = \"spatial_omics\",   scale = \"auto\",   unit = \"um\",   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/build_vesalius_assay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"build vesalius assay object — build_vesalius_assay","text":"coordinates data.frame format barcodes, x, y. Default NULL. See details. counts matrix, sparse matrix containing counts. Default NULL. See details. image connection string image array assay character vector containing names assays (see details). scale character | numeric - \"auto\", vesalius compute 99 percentile inter barcodes distance else provide numeric value describing distance barcodes. unit character - units scale verbose logical indicating progress message outputed .","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/build_vesalius_assay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"build vesalius assay object — build_vesalius_assay","text":"vesalius_assay objecy","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/build_vesalius_assay.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"build vesalius assay object — build_vesalius_assay","text":"vesalius_assay constructor allows create partial complete vesalius_assay objects. Partial objects contain coordinates. Complete objects contain counts coordinates. main purpose using partial objects (empty objects) able provide count matrix. useful want normalise data way provided vesalius. approach using data can also apply embeddings. generated set latent space embeddings wish use instead provided vesalius, can use add_embeddings function. Along side input data, can provide name assay. none provided, Vesalius generate set names based default assay name \"spatial_omics\". can decide want adjust coordinates origin .e remove unnecessary space normalise coordinates. Norm recommened moment","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/build_vesalius_assay.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"build vesalius assay object — build_vesalius_assay","text":"","code":"data(vesalius) # Single assay object ves <- build_vesalius_assay(coordinates, counts) #> #--------------------------------------------------------------------------------#  #> 2025-30-08/27/25 19:30:36  Checking Coordinates in spatial_omics  #> 2025-30-08/27/25 19:30:36  Checking Counts in spatial_omics  #> 2025-30-08/27/25 19:30:36  Calculating Assay scale from coordinates #> #--------------------------------------------------------------------------------#"},{"path":"wonlab-cs.github.io/Vesalius/reference/calculate_scale.html","id":null,"dir":"Reference","previous_headings":"","what":"calculate scale of assay — calculate_scale","title":"calculate scale of assay — calculate_scale","text":"calculate scale assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/calculate_scale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"calculate scale of assay — calculate_scale","text":"","code":"calculate_scale(coordinates, q = 0.999)"},{"path":"wonlab-cs.github.io/Vesalius/reference/calculate_scale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"calculate scale of assay — calculate_scale","text":"coordinates Spatial coordinates data frame q quantile range","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/calculate_scale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"calculate scale of assay — calculate_scale","text":"Single numeric","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/calculate_scale.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"calculate scale of assay — calculate_scale","text":"Calculate average distance spots/beads/indeces","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/cell_type_match.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute score based on cell type labels — cell_type_match","title":"Compute score based on cell type labels — cell_type_match","text":"Compute score based cell type labels","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/cell_type_match.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute score based on cell type labels — cell_type_match","text":"","code":"cell_type_match(seed_labels, query_labels)"},{"path":"wonlab-cs.github.io/Vesalius/reference/cell_type_match.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute score based on cell type labels — cell_type_match","text":"seed_labels cell type labels seed (reference) data query_labels cell type labels query data","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/cell_type_match.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute score based on cell type labels — cell_type_match","text":"Score matrix based cell label similarity","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/cell_type_match.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute score based on cell type labels — cell_type_match","text":"Return 1 label 0 different.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_barcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"checking overlap between barcodes in counts and coordinates — check_barcodes","title":"checking overlap between barcodes in counts and coordinates — check_barcodes","text":"checking overlap barcodes counts coordinates","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_barcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"checking overlap between barcodes in counts and coordinates — check_barcodes","text":"","code":"check_barcodes(mat_barcodes, coordinates, throw = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_barcodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"checking overlap between barcodes in counts and coordinates — check_barcodes","text":"mat_barcodes character vector containing barcode names matrix (count matrix embedding matrix) coordinates character vector containing barcode names tile data frame throw logical warning thrown ","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_barcodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"checking overlap between barcodes in counts and coordinates — check_barcodes","text":"overlapping location counts coordinates","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_barcodes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"checking overlap between barcodes in counts and coordinates — check_barcodes","text":"throw warning overlap perfect.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_binary_nature.html","id":null,"dir":"Reference","previous_headings":"","what":"check binary nature — check_binary_nature","title":"check binary nature — check_binary_nature","text":"check binary nature","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_binary_nature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check binary nature — check_binary_nature","text":"","code":"check_binary_nature(buffer)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_binary_nature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check binary nature — check_binary_nature","text":"buffer list containing output get_deg_metrics test string - test type scope","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_binary_nature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check binary nature — check_binary_nature","text":"buffer list","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_binary_nature.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check binary nature — check_binary_nature","text":"now check might depreciated future.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"check if provided cells are contained withing provided territory — check_cells","title":"check if provided cells are contained withing provided territory — check_cells","text":"check provided cells contained withing provided territory","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if provided cells are contained withing provided territory — check_cells","text":"","code":"check_cells(territory_barcodes, ter, cell_barcodes)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if provided cells are contained withing provided territory — check_cells","text":"territory_barcodes character vector containing spatial barcodes territories ter string selected territories form chacater string cell_barcodes character vector containing barcodes cells interest","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if provided cells are contained withing provided territory — check_cells","text":"charcater vector common barcodes territory barcodes cell barcodes.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"check if coordinates are of the correct type and format and adjust coordinate value to remove white edge space — check_coordinates","title":"check if coordinates are of the correct type and format and adjust coordinate value to remove white edge space — check_coordinates","text":"check coordinates correct type format adjust coordinate value remove white edge space","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if coordinates are of the correct type and format and adjust coordinate value to remove white edge space — check_coordinates","text":"","code":"check_coordinates(coordinates, assay, verbose)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if coordinates are of the correct type and format and adjust coordinate value to remove white edge space — check_coordinates","text":"coordinates coordinate data assay string - assay name verbose logical progress message printed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if coordinates are of the correct type and format and adjust coordinate value to remove white edge space — check_coordinates","text":"coordinates data.frame error","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_coordinates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check if coordinates are of the correct type and format and adjust coordinate value to remove white edge space — check_coordinates","text":"adjusts coordinates either snapping coordinates origin min max normalisation coordinates. Might add polar future tests.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"check if counts are of the correct type and format — check_counts","title":"check if counts are of the correct type and format — check_counts","text":"check counts correct type format","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if counts are of the correct type and format — check_counts","text":"","code":"check_counts(counts, assay, verbose)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if counts are of the correct type and format — check_counts","text":"counts count matrix assay string - assay name verbose logical progress message printed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if counts are of the correct type and format — check_counts","text":"count matrix error","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_deg_method.html","id":null,"dir":"Reference","previous_headings":"","what":"check if DEG method is one of the available options — check_deg_method","title":"check if DEG method is one of the available options — check_deg_method","text":"check DEG method one available options","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_deg_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if DEG method is one of the available options — check_deg_method","text":"","code":"check_deg_method(method)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_deg_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if DEG method is one of the available options — check_deg_method","text":"method string - DEG method","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_deg_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if DEG method is one of the available options — check_deg_method","text":"DEG method error","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_dim_selection_method.html","id":null,"dir":"Reference","previous_headings":"","what":"check dimension selection method — check_dim_selection_method","title":"check dimension selection method — check_dim_selection_method","text":"check dimension selection method","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_dim_selection_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check dimension selection method — check_dim_selection_method","text":"","code":"check_dim_selection_method(method)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_dim_selection_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check dimension selection method — check_dim_selection_method","text":"method string - dimensions selecion","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_dim_selection_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check dimension selection method — check_dim_selection_method","text":"territory isolation method","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embed_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"check if embedding method is present in availble options — check_embed_methods","title":"check if embedding method is present in availble options — check_embed_methods","text":"check embedding method present availble options","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embed_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if embedding method is present in availble options — check_embed_methods","text":"","code":"check_embed_methods(embed)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embed_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if embedding method is present in availble options — check_embed_methods","text":"embed embedding method selected user","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embed_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if embedding method is present in availble options — check_embed_methods","text":"embedding method string error","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embedding_selection.html","id":null,"dir":"Reference","previous_headings":"","what":"check embedding selection — check_embedding_selection","title":"check embedding selection — check_embedding_selection","text":"check embedding selection","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embedding_selection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check embedding selection — check_embedding_selection","text":"","code":"check_embedding_selection(vesalius_assay, embed, dims)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embedding_selection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check embedding selection — check_embedding_selection","text":"vesalius_assay vesalius_assay embed string embedding selection choice dims integer vector containing embedding dimension extract","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embedding_selection.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check embedding selection — check_embedding_selection","text":"embedding data frame","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embedding_selection.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check embedding selection — check_embedding_selection","text":"want check embedding user requests present assay. return error. one name return last entry name warning. Default last just take last embedding created stored active slot vesalius_Assay object. also want able select dimensions want return. make sure dimensions can extracted embedding data frame.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embeddings.html","id":null,"dir":"Reference","previous_headings":"","what":"check embeddings checking user provided embedding matrix — check_embeddings","title":"check embeddings checking user provided embedding matrix — check_embeddings","text":"check embeddings checking user provided embedding matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embeddings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check embeddings checking user provided embedding matrix — check_embeddings","text":"","code":"check_embeddings(embeddings)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embeddings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check embeddings checking user provided embedding matrix — check_embeddings","text":"embeddings matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embeddings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check embeddings checking user provided embedding matrix — check_embeddings","text":"formated matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_embeddings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check embeddings checking user provided embedding matrix — check_embeddings","text":"user provides embedding matrix, need check fits required format throw, errors, warnings adjust possible.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_eq_method.html","id":null,"dir":"Reference","previous_headings":"","what":"check if eq method are avilable — check_eq_method","title":"check if eq method are avilable — check_eq_method","text":"check eq method avilable","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_eq_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if eq method are avilable — check_eq_method","text":"","code":"check_eq_method(method)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_eq_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if eq method are avilable — check_eq_method","text":"method string - eq method","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_eq_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if eq method are avilable — check_eq_method","text":"eq method","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_features.html","id":null,"dir":"Reference","previous_headings":"","what":"check features — check_features","title":"check features — check_features","text":"check features check features","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check features — check_features","text":"","code":"check_features(counts)  check_features(counts)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check features — check_features","text":"counts seurat object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check features — check_features","text":"list features list features","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_features.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check features — check_features","text":"user use custom counts, want check variable features computed . Dim reduction requires list features toi provided variable features computed. user use custom counts, want check variable features computed . Dim reduction requires list features toi provided variable features computed.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_for_zero_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"check_for_zero_counts check which barcodes contain all 0 counts and filter — check_for_zero_counts","title":"check_for_zero_counts check which barcodes contain all 0 counts and filter — check_for_zero_counts","text":"check_for_zero_counts check barcodes contain 0 counts filter","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_for_zero_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check_for_zero_counts check which barcodes contain all 0 counts and filter — check_for_zero_counts","text":"","code":"check_for_zero_counts(counts)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_for_zero_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check_for_zero_counts check which barcodes contain all 0 counts and filter — check_for_zero_counts","text":"counts count matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_for_zero_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check_for_zero_counts check which barcodes contain all 0 counts and filter — check_for_zero_counts","text":"trimmed count matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_group_value.html","id":null,"dir":"Reference","previous_headings":"","what":"check if requested territory is in territory list — check_group_value","title":"check if requested territory is in territory list — check_group_value","text":"check requested territory territory list","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_group_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if requested territory is in territory list — check_group_value","text":"","code":"check_group_value(territories, group)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_group_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if requested territory is in territory list — check_group_value","text":"territories data frame containing territories group vector indicating territories selected territory data frame.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_group_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if requested territory is in territory list — check_group_value","text":"vector territories present territory data frame","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_image.html","id":null,"dir":"Reference","previous_headings":"","what":"check if image is present — check_image","title":"check if image is present — check_image","text":"check image present","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if image is present — check_image","text":"","code":"check_image(vesalius_assay, image_name = NULL, as_is = FALSE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if image is present — check_image","text":"vesalius_assay vesalius assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if image is present — check_image","text":"microscopy image","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_image_input.html","id":null,"dir":"Reference","previous_headings":"","what":"check image input check if input image is in correct format — check_image_input","title":"check image input check if input image is in correct format — check_image_input","text":"check image input check input image correct format","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_image_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check image input check if input image is in correct format — check_image_input","text":"","code":"check_image_input(image)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_image_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check image input check if input image is in correct format — check_image_input","text":"image input","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_image_input.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check image input check if input image is in correct format — check_image_input","text":"list images","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_inputs.html","id":null,"dir":"Reference","previous_headings":"","what":"check input checks the validity of input data to build_vesalius_assay — check_inputs","title":"check input checks the validity of input data to build_vesalius_assay — check_inputs","text":"check input checks validity input data build_vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_inputs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check input checks the validity of input data to build_vesalius_assay — check_inputs","text":"","code":"check_inputs(counts, coordinates, image, assay, verbose)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_inputs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check input checks the validity of input data to build_vesalius_assay — check_inputs","text":"counts count matrix coordinates coordinate file image connection image image array assay string assay name verbose logical progress message outputed.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_inputs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check input checks the validity of input data to build_vesalius_assay — check_inputs","text":"list containing checked counts, coordinates assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_isolation_method.html","id":null,"dir":"Reference","previous_headings":"","what":"check territory isolation method is available — check_isolation_method","title":"check territory isolation method is available — check_isolation_method","text":"check territory isolation method available","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_isolation_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check territory isolation method is available — check_isolation_method","text":"","code":"check_isolation_method(method)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_isolation_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check territory isolation method is available — check_isolation_method","text":"method string - territory isolation method","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_isolation_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check territory isolation method is available — check_isolation_method","text":"territory isolation method","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_min_spatial_index.html","id":null,"dir":"Reference","previous_headings":"","what":"check number of spatial indices present — check_min_spatial_index","title":"check number of spatial indices present — check_min_spatial_index","text":"check number spatial indices present","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_min_spatial_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check number of spatial indices present — check_min_spatial_index","text":"","code":"check_min_spatial_index(group, min_spatial_index, id)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_min_spatial_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check number of spatial indices present — check_min_spatial_index","text":"group count matrix min_spatial_index numeric - min number spatial indices need present group id string - id group","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"check if select norm method is an available option — check_norm","title":"check if select norm method is an available option — check_norm","text":"check select norm method available option","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if select norm method is an available option — check_norm","text":"","code":"check_norm(vesalius_assay, norm_method, method = NULL, verbose = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if select norm method is an available option — check_norm","text":"vesalius_assay vesalius_assay norm_method string - selected normalisation parsed user method DEG method verbose logical progress message ouputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if select norm method is an available option — check_norm","text":"count matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_norm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check if select norm method is an available option — check_norm","text":"check normalisation method computed count slot. also check used context differential gene expression analysis. DESeq edgeR require raw counts user parses valid norm method running DEG one methods, ignore request parse raw count instead.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_norm_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"check if norm method is present in availble options — check_norm_methods","title":"check if norm method is present in availble options — check_norm_methods","text":"check norm method present availble options","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_norm_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if norm method is present in availble options — check_norm_methods","text":"","code":"check_norm_methods(norm, use_counts = NULL)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_norm_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if norm method is present in availble options — check_norm_methods","text":"norm string - norm method parsed function use_counts string - count matrix use","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_norm_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if norm method is present in availble options — check_norm_methods","text":"norm method string error","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_segment_trial.html","id":null,"dir":"Reference","previous_headings":"","what":"check if segment selection is a valid option — check_segment_trial","title":"check if segment selection is a valid option — check_segment_trial","text":"check segment selection valid option","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_segment_trial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if segment selection is a valid option — check_segment_trial","text":"","code":"check_segment_trial(vesalius_assay, trial = \"last\")"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_segment_trial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if segment selection is a valid option — check_segment_trial","text":"vesalius_assay vesalius_assay object trial string - trial selection parse user","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_segment_trial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if segment selection is a valid option — check_segment_trial","text":"data frame contain selected trial","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_segment_trial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check if segment selection is a valid option — check_segment_trial","text":"check trial selection exists territory slot Default last take last entry. function also reformat include necessay information.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_segmentation_method.html","id":null,"dir":"Reference","previous_headings":"","what":"check if segmentation options are valid for segmentation — check_segmentation_method","title":"check if segmentation options are valid for segmentation — check_segmentation_method","text":"check segmentation options valid segmentation","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_segmentation_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if segmentation options are valid for segmentation — check_segmentation_method","text":"","code":"check_segmentation_method(method)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_segmentation_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if segmentation options are valid for segmentation — check_segmentation_method","text":"method string - segmentation method","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_segmentation_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if segmentation options are valid for segmentation — check_segmentation_method","text":"segmentation method","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_smoothing_kernel.html","id":null,"dir":"Reference","previous_headings":"","what":"check if smoothing method is present in availble options — check_smoothing_kernel","title":"check if smoothing method is present in availble options — check_smoothing_kernel","text":"check smoothing method present availble options","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_smoothing_kernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if smoothing method is present in availble options — check_smoothing_kernel","text":"","code":"check_smoothing_kernel(method)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_smoothing_kernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if smoothing method is present in availble options — check_smoothing_kernel","text":"method smoothing method selected user","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_smoothing_kernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if smoothing method is present in availble options — check_smoothing_kernel","text":"smoothing method string error","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_smoothing_level.html","id":null,"dir":"Reference","previous_headings":"","what":"check if across level options are valid for smoothing — check_smoothing_level","title":"check if across level options are valid for smoothing — check_smoothing_level","text":"check across level options valid smoothing","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_smoothing_level.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if across level options are valid for smoothing — check_smoothing_level","text":"","code":"check_smoothing_level(method)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_smoothing_level.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if across level options are valid for smoothing — check_smoothing_level","text":"method string - across level option","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_smoothing_level.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if across level options are valid for smoothing — check_smoothing_level","text":"acroos level option error","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_tensor_compression.html","id":null,"dir":"Reference","previous_headings":"","what":"check tensor compression — check_tensor_compression","title":"check tensor compression — check_tensor_compression","text":"check tensor compression","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_tensor_compression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check tensor compression — check_tensor_compression","text":"","code":"check_tensor_compression(locs)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_tensor_compression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check tensor compression — check_tensor_compression","text":"locs rle output coordinate compression","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_tensor_compression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check tensor compression — check_tensor_compression","text":"rle coordinate compression","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_tensor_compression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check tensor compression — check_tensor_compression","text":"just want check output reasonable Essentially end little barcodes, mean user compressed much. Set warning compression set less 10","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_territory_trial.html","id":null,"dir":"Reference","previous_headings":"","what":"check if territory selection is a valid option — check_territory_trial","title":"check if territory selection is a valid option — check_territory_trial","text":"check territory selection valid option","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_territory_trial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check if territory selection is a valid option — check_territory_trial","text":"","code":"check_territory_trial(vesalius_assay, trial, return_label = FALSE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_territory_trial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check if territory selection is a valid option — check_territory_trial","text":"vesalius_assay vesalius_assay object trial string - trial selection parse user return_label string - return colmun name","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_territory_trial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check if territory selection is a valid option — check_territory_trial","text":"data frame contain selected trial","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_territory_trial.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check if territory selection is a valid option — check_territory_trial","text":"check trial selection exists territory slot Default last take last entry. function also reformat include necessay information.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"check tile integretiy — check_tiles","title":"check tile integretiy — check_tiles","text":"check tile integretiy","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"check tile integretiy — check_tiles","text":"","code":"check_tiles(vesalius_assay)"},{"path":"wonlab-cs.github.io/Vesalius/reference/check_tiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"check tile integretiy — check_tiles","text":"vesalius_assay vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_tiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"check tile integretiy — check_tiles","text":"tile data frame","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/check_tiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"check tile integretiy — check_tiles","text":"place holder depth checks moment return tiles","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/commit_log.html","id":null,"dir":"Reference","previous_headings":"","what":"commits function call to log slot — commit_log","title":"commits function call to log slot — commit_log","text":"commits function call log slot","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/commit_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"commits function call to log slot — commit_log","text":"","code":"commit_log(vesalius_assay, commit, assay)"},{"path":"wonlab-cs.github.io/Vesalius/reference/commit_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"commits function call to log slot — commit_log","text":"vesalius_assay vesalius_assay object commit list containing arguments used latest function call assay assay name used latest function call","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/commit_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"commits function call to log slot — commit_log","text":"vesalius_assay updated log slot","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/compute_effect_size.html","id":null,"dir":"Reference","previous_headings":"","what":"compute_effect_size — compute_effect_size","title":"compute_effect_size — compute_effect_size","text":"compute_effect_size","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/compute_effect_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute_effect_size — compute_effect_size","text":"","code":"compute_effect_size(pval, seed, query)"},{"path":"wonlab-cs.github.io/Vesalius/reference/compute_effect_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute_effect_size — compute_effect_size","text":"pval pvalue given gene seed number cells seed query number cells query","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/compute_effect_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute_effect_size — compute_effect_size","text":"efect size estimate unbalenced power analysis. importFrom pwr pwr.2p2n.test","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/compute_effect_size.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"compute_effect_size — compute_effect_size","text":"pval 0 convert small number pwr take 0 input values. DESeq might return NA pvals - just skip effect size return NA","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/compute_nearest_neighbor_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"compute and greate nearest neighbor graph — compute_nearest_neighbor_graph","title":"compute and greate nearest neighbor graph — compute_nearest_neighbor_graph","text":"compute greate nearest neighbor graph","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/compute_nearest_neighbor_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute and greate nearest neighbor graph — compute_nearest_neighbor_graph","text":"","code":"compute_nearest_neighbor_graph(embeddings, k = 20)"},{"path":"wonlab-cs.github.io/Vesalius/reference/compute_nearest_neighbor_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute and greate nearest neighbor graph — compute_nearest_neighbor_graph","text":"embeddings embedding matrix k numeric describing number nearest neighbors","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/compute_nearest_neighbor_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute and greate nearest neighbor graph — compute_nearest_neighbor_graph","text":"igraph object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_cost.html","id":null,"dir":"Reference","previous_headings":"","what":"concat cost - pairwise sum of score complement — concat_cost","title":"concat cost - pairwise sum of score complement — concat_cost","text":"concat cost - pairwise sum score complement","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_cost.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"concat cost - pairwise sum of score complement — concat_cost","text":"","code":"concat_cost(cost, use_cost, complement = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_cost.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"concat cost - pairwise sum of score complement — concat_cost","text":"cost list - named list contained score matrices use_cost character - cost matrices use","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_cost.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"concat cost - pairwise sum of score complement — concat_cost","text":"list cost matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_embed.html","id":null,"dir":"Reference","previous_headings":"","what":"create new embedding from jointly measure spatial omics — concat_embed","title":"create new embedding from jointly measure spatial omics — concat_embed","text":"create new embedding jointly measure spatial omics","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_embed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create new embedding from jointly measure spatial omics — concat_embed","text":"","code":"concat_embed(seed, query, dimensions, norm_method, dim_reduction, signal)"},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_embed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create new embedding from jointly measure spatial omics — concat_embed","text":"seed vesalius_assay object first modality query vesalius_assay object second modality dimensions int - number gray scale images create norm_method string describing normalisation method use. One following \"log_norm\", \"SCT\", \"TFIDF\", \"raw\" dim_reduction string describing dimensionality reduction method used. One following: \"PCA\", \"PCA_L\", \"UMAP\", \"LSI\", \"LSI_UMAP\"","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_embed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create new embedding from jointly measure spatial omics — concat_embed","text":"embedding matrix used grey scale image stack","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_embed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create new embedding from jointly measure spatial omics — concat_embed","text":"Create new latent space using feature modalities Creates new feature matrix nromalized converted latent space image stack.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"merging batch matches together — concat_matches","title":"merging batch matches together — concat_matches","text":"merging batch matches together","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"merging batch matches together — concat_matches","text":"","code":"concat_matches(matched_indices, coms)"},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"merging batch matches together — concat_matches","text":"matched_indices list containing matched points batch coms character - potential changes applied data Attached list comment attribute","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/concat_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"merging batch matches together — concat_matches","text":"data.frame matched points","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/convexify.html","id":null,"dir":"Reference","previous_headings":"","what":"convexify — convexify","title":"convexify — convexify","text":"order coordinates based angle around central point","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/convexify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convexify — convexify","text":"","code":"convexify(xside, yside, indx, indy, order = FALSE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/convexify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convexify — convexify","text":"xside vector x coordinates yside vector y coordinates indx central point x coordinate indy central point y coordinate order logical - TRUE return order coordinates","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/convexify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convexify — convexify","text":"data frame ordered x y coordinates.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/convexify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convexify — convexify","text":"rasterisation, shape polygon must convex possible. ensure points sense convex form order based polar coordinate angle.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial coordinates — coordinates","title":"Spatial coordinates — coordinates","text":"Spatial coordinates","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial coordinates — coordinates","text":"","code":"data(vesalius)"},{"path":"wonlab-cs.github.io/Vesalius/reference/coordinates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial coordinates — coordinates","text":"coordinate data frame coordinates spatial coodinates Puck_200815 taken slide-seV2","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/coordinates.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial coordinates — coordinates","text":"https://singlecell.broadinstitute.org/single_cell/study/SCP948/robust-decomposition--cell-type-mixtures--spatial-transcriptomics#study-download","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Count matrix for vesalius — counts","title":"Count matrix for vesalius — counts","text":"Count matrix vesalius","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count matrix for vesalius — counts","text":"","code":"data(vesalius)"},{"path":"wonlab-cs.github.io/Vesalius/reference/counts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Count matrix for vesalius — counts","text":"sparse count matrix counts gene counts Puck_200815 taken slide-seV2","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/counts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Count matrix for vesalius — counts","text":"https://singlecell.broadinstitute.org/single_cell/study/SCP948/robust-decomposition--cell-type-mixtures--spatial-transcriptomics#study-download","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_alpha.html","id":null,"dir":"Reference","previous_headings":"","what":"create alpha value if territories need to be highlighted — create_alpha","title":"create alpha value if territories need to be highlighted — create_alpha","text":"create alpha value territories need highlighted","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_alpha.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create alpha value if territories need to be highlighted — create_alpha","text":"","code":"create_alpha(territories, highlight, alpha)"},{"path":"wonlab-cs.github.io/Vesalius/reference/create_alpha.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create alpha value if territories need to be highlighted — create_alpha","text":"territories vesalius territories taken vesalius_assay highlight numeric vector describing territories highlighted alpha tranaparent factor","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_alpha.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create alpha value if territories need to be highlighted — create_alpha","text":"vector alpha values","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_alpha.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create alpha value if territories need to be highlighted — create_alpha","text":"highlight null, return alpha values territories","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_commit_log.html","id":null,"dir":"Reference","previous_headings":"","what":"create function log to be commit to the log slot — create_commit_log","title":"create function log to be commit to the log slot — create_commit_log","text":"create function log commit log slot","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_commit_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create function log to be commit to the log slot — create_commit_log","text":"","code":"create_commit_log(arg_match, default)"},{"path":"wonlab-cs.github.io/Vesalius/reference/create_commit_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create function log to be commit to the log slot — create_commit_log","text":"arg_match function argument call default default argument values function","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_commit_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create function log to be commit to the log slot — create_commit_log","text":"list arguments used latest function call","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"create color palette from predefine scheme — create_palette","title":"create color palette from predefine scheme — create_palette","text":"create color palette predefine scheme","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create color palette from predefine scheme — create_palette","text":"","code":"create_palette(territories, randomise)"},{"path":"wonlab-cs.github.io/Vesalius/reference/create_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create color palette from predefine scheme — create_palette","text":"territories vesalius territories taken vesalius_assay randomise logical describing colour palette randomised.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create color palette from predefine scheme — create_palette","text":"color vector","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_palette.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"create color palette from predefine scheme — create_palette","text":"use predefined palette use colour blind friendly base colours. generate color palette based number territories present. required colours randomly assinged territory. Note territory plot return ggplot object, can easily override color scheme.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_pseudo_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"create centroid vlues for louvain and leiden — create_pseudo_centroids","title":"create centroid vlues for louvain and leiden — create_pseudo_centroids","text":"create centroid vlues louvain leiden","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_pseudo_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create centroid vlues for louvain and leiden — create_pseudo_centroids","text":"","code":"create_pseudo_centroids(vesalius_assay, clusters, dimensions)"},{"path":"wonlab-cs.github.io/Vesalius/reference/create_pseudo_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create centroid vlues for louvain and leiden — create_pseudo_centroids","text":"vesalius_assay vesalius assay object clusters data frame containing clusters/segments dimensions vector (nummeric / int) describin latent space dimensiuons shouls used.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_pseudo_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create centroid vlues for louvain and leiden — create_pseudo_centroids","text":"matrix active embedding usiong color segementation","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_trial_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"create a trail tag name — create_trial_tag","title":"create a trail tag name — create_trial_tag","text":"create trail tag name","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/create_trial_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create a trail tag name — create_trial_tag","text":"","code":"create_trial_tag(trials, tag)"},{"path":"wonlab-cs.github.io/Vesalius/reference/create_trial_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create a trail tag name — create_trial_tag","text":"trials character vector containing names trials already computed tag character string describing trial tag add","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/detect_edges.html","id":null,"dir":"Reference","previous_headings":"","what":"detect_edges detect territory edges in black and white images with sobel filter — detect_edges","title":"detect_edges detect territory edges in black and white images with sobel filter — detect_edges","text":"detect_edges detect territory edges black white images sobel filter","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/detect_edges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"detect_edges detect territory edges in black and white images with sobel filter — detect_edges","text":"","code":"detect_edges(img)"},{"path":"wonlab-cs.github.io/Vesalius/reference/detect_edges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"detect_edges detect territory edges in black and white images with sobel filter — detect_edges","text":"img cimg image","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/detect_edges.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"detect_edges detect territory edges in black and white images with sobel filter — detect_edges","text":"pix set containing deteced edges","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Dispatch cells into batches — dispatch_batch","title":"Dispatch cells into batches — dispatch_batch","text":"Dispatch cells batches","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dispatch cells into batches — dispatch_batch","text":"","code":"dispatch_batch(cost_matrix, batch_size = 5000)"},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dispatch cells into batches — dispatch_batch","text":"cost_matrix matrix containing cost cell pair batch_size int size batch","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dispatch cells into batches — dispatch_batch","text":"Nested list. element list contain batched cost matrix mapping pairs","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_batch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Dispatch cells into batches — dispatch_batch","text":"Create cell batches dynamically adapt size data set respect batch size. Smalled data sets, cells sampled match size larger data set. allows multiple multiple matching. cells selected least .","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_cost_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"dispatch barcodes to subset cost for match clustering — dispatch_cost_groups","title":"dispatch barcodes to subset cost for match clustering — dispatch_cost_groups","text":"dispatch barcodes subset cost match clustering","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_cost_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dispatch barcodes to subset cost for match clustering — dispatch_cost_groups","text":"","code":"dispatch_cost_groups(   vesalius_assay,   cost,   trial = NULL,   group_identity = NULL,   ref_cells = NULL,   query_cells = NULL )"},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_cost_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dispatch barcodes to subset cost for match clustering — dispatch_cost_groups","text":"vesalius_assay vesalius_assay object post cell mapping group_identity character - name column containing group used cluster (.e. territories, segments, layers etc) cell_label character - name column containing cell names clustering done cell types ","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_cost_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dispatch barcodes to subset cost for match clustering — dispatch_cost_groups","text":"character string barcodes","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_deg_group.html","id":null,"dir":"Reference","previous_headings":"","what":"dispatch barcodes to seed and query groups — dispatch_deg_group","title":"dispatch barcodes to seed and query groups — dispatch_deg_group","text":"dispatch barcodes seed query groups","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_deg_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dispatch barcodes to seed and query groups — dispatch_deg_group","text":"","code":"dispatch_deg_group(ter, seed, query, cells, sample, verbose)"},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_deg_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dispatch barcodes to seed and query groups — dispatch_deg_group","text":"ter territories data frame territoires slot vesalius_assay object seed interger vector indicating territories included seed group query interger vector indicating territories included query group cells cell barcodes sample barcodes sample type verbose logical progress messages outputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_deg_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dispatch barcodes to seed and query groups — dispatch_deg_group","text":"list seed group seed id well query group query id","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_deg_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"dispatch barcodes to seed and query groups — dispatch_deg_group","text":"function generates groups DEG analysis. creates different groups depending parse seed query. probably cleaned simplified. Always need return list though.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_sample.html","id":null,"dir":"Reference","previous_headings":"","what":"dispatch barcodes associted with a specific territory in a specific samples — dispatch_sample","title":"dispatch barcodes associted with a specific territory in a specific samples — dispatch_sample","text":"dispatch barcodes associted specific territory specific samples","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_sample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dispatch barcodes associted with a specific territory in a specific samples — dispatch_sample","text":"","code":"dispatch_sample(territory_barcodes, ter, sample)"},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_sample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dispatch barcodes associted with a specific territory in a specific samples — dispatch_sample","text":"territory_barcodes character vector barcodes associated territory ter chracter territory id sample character vector associeted sample","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_sample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"dispatch barcodes associted with a specific territory in a specific samples — dispatch_sample","text":"character vector barcodes intersection territory sample","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_territory.html","id":null,"dir":"Reference","previous_headings":"","what":"dispatch territories labels territories according to which group they belong to. — dispatch_territory","title":"dispatch territories labels territories according to which group they belong to. — dispatch_territory","text":"dispatch territories labels territories according group belong .","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_territory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dispatch territories labels territories according to which group they belong to. — dispatch_territory","text":"","code":"dispatch_territory(territories, ter_1, ter_2, cells)"},{"path":"wonlab-cs.github.io/Vesalius/reference/dispatch_territory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dispatch territories labels territories according to which group they belong to. — dispatch_territory","text":"territories territories data frame territoires slot vesalius_assay object ter_1 integer vector containing territories group 1 ter_2 integer vector containing territories group 2 cells cell barcodes","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/distance_pooling.html","id":null,"dir":"Reference","previous_headings":"","what":"distance pooling beads of colour segment into seperate territories — distance_pooling","title":"distance pooling beads of colour segment into seperate territories — distance_pooling","text":"distance pooling beads colour segment seperate territories","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/distance_pooling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"distance pooling beads of colour segment into seperate territories — distance_pooling","text":"","code":"distance_pooling(img, capture_radius, min_spatial_index)"},{"path":"wonlab-cs.github.io/Vesalius/reference/distance_pooling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"distance pooling beads of colour segment into seperate territories — distance_pooling","text":"img data frame contain barcodes single sgement capture_radius numeric proportion max distance beads use distance threshold beads min_spatial_index numeric minimum number beads contained territory.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/distance_pooling.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"distance pooling beads of colour segment into seperate territories — distance_pooling","text":"Beads far away bead cluster minimum number spatial indices pooled isolated label. Note label used across color segments.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/ecdf_eq.html","id":null,"dir":"Reference","previous_headings":"","what":"internal ecdf eq used for formatting — ecdf_eq","title":"internal ecdf eq used for formatting — ecdf_eq","text":"internal ecdf eq used formatting","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/ecdf_eq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal ecdf eq used for formatting — ecdf_eq","text":"","code":"ecdf_eq(im)"},{"path":"wonlab-cs.github.io/Vesalius/reference/ecdf_eq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"internal ecdf eq used for formatting — ecdf_eq","text":"im image matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_latent_space.html","id":null,"dir":"Reference","previous_headings":"","what":"embed latent space — embed_latent_space","title":"embed latent space — embed_latent_space","text":"Embed latent space grey color scale.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_latent_space.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"embed latent space — embed_latent_space","text":"","code":"embed_latent_space(   counts,   assay,   dim_reduction,   dimensions,   features = NULL,   remove_lsi_1,   verbose )"},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_latent_space.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"embed latent space — embed_latent_space","text":"counts Seurat object containing counts (generally normalised) assay charcter string assay used dim_reduction dimensionality reduction method used Select PCA, PCA_L, UMAP, LSI, LSI_UMAP dimensions numeric number dimeniosn top retain dimensionality reduction features custom features used dim reduction remove_lsi_1 logical first dimension LSI embedding removed (soon depreciated) verbose logical progress messages outputed ","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_latent_space.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"embed latent space — embed_latent_space","text":"data frame normalised embedding values.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_latent_space.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"embed latent space — embed_latent_space","text":"General method dispatch function dim reduction methods","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_lsi.html","id":null,"dir":"Reference","previous_headings":"","what":"embed lsi — embed_lsi","title":"embed lsi — embed_lsi","text":"embed grey scale using latent semantic indexing","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_lsi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"embed lsi — embed_lsi","text":"","code":"embed_lsi(counts, dimensions, features = NULL, remove_lsi_1, verbose = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_lsi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"embed lsi — embed_lsi","text":"counts Seurat object containing normalised counts dimensions numeric number latent space dimensions use features custom vector features remove_lsi_1 logical first LSI dimenions removed verbose logical progress messages outputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_lsi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"embed lsi — embed_lsi","text":"normalised LSI embedding matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_lsi_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"embed lsi — embed_lsi_umap","title":"embed lsi — embed_lsi_umap","text":"embed grey scale using latent semantic indexing followed UMAP","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_lsi_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"embed lsi — embed_lsi_umap","text":"","code":"embed_lsi_umap(   counts,   dimensions,   features = NULL,   remove_lsi_1,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_lsi_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"embed lsi — embed_lsi_umap","text":"counts Seurat object containing normalised counts dimensions numeric number latent space dimensions use features custom vector features remove_lsi_1 logical first LSI dimenions removed verbose logical progress messages outputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_lsi_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"embed lsi — embed_lsi_umap","text":"normalised LSI embedding matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_nmf.html","id":null,"dir":"Reference","previous_headings":"","what":"embed nmf — embed_nmf","title":"embed nmf — embed_nmf","text":"embed grey scale using NMF embeddings","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_nmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"embed nmf — embed_nmf","text":"","code":"embed_nmf(counts, dimensions, verbose = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_nmf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"embed nmf — embed_nmf","text":"counts Seurat object containing normalised counts dimensions number dimension retain NMF verbose logical progress messages outputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_nmf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"embed nmf — embed_nmf","text":"normalised NMF embedding matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_pca.html","id":null,"dir":"Reference","previous_headings":"","what":"embed PCA — embed_pca","title":"embed PCA — embed_pca","text":"embed grey scale using PCA embeddings","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_pca.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"embed PCA — embed_pca","text":"","code":"embed_pca(counts, dimensions, features = NULL, verbose = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_pca.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"embed PCA — embed_pca","text":"counts Seurat object containing normalised counts dimensions number dimension retain PCA features custom vector features verbose logical progress messages outputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_pca.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"embed PCA — embed_pca","text":"normalised PCA embedding matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_pcal.html","id":null,"dir":"Reference","previous_headings":"","what":"embed PCA loading values — embed_pcal","title":"embed PCA loading values — embed_pcal","text":"embed grey scale using PCA Loading value","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_pcal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"embed PCA loading values — embed_pcal","text":"","code":"embed_pcal(counts, dimensions, features = NULL, verbose = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_pcal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"embed PCA loading values — embed_pcal","text":"counts Seurat object containing normalised counts dimensions number dimension retain PCA features custom vector features verbose logical progress messages outputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_pcal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"embed PCA loading values — embed_pcal","text":"normalised PCA loading matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_pcal.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"embed PCA loading values — embed_pcal","text":"approach slightly different takes loading value associted gene barcode sums absolute value values. genes barcodes summed, normalise latent space return matrix.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_umap.html","id":null,"dir":"Reference","previous_headings":"","what":"embed umap — embed_umap","title":"embed umap — embed_umap","text":"embed gray scale using UMAP projections","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_umap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"embed umap — embed_umap","text":"","code":"embed_umap(counts, dimensions, features = NULL, verbose)"},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_umap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"embed umap — embed_umap","text":"counts Seurat object containing normalised counts dimensions number PCs use UMAP projections features custom vector features verbose logical progress messages outputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_umap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"embed umap — embed_umap","text":"normalised UMAP projection matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/embed_umap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"embed umap — embed_umap","text":"Note can select number dimensions number UMAP dimensions always 3.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/equalize_image.html","id":null,"dir":"Reference","previous_headings":"","what":"equalise image histogram — equalize_image","title":"equalise image histogram — equalize_image","text":"equalizeHistogram image enhancement via colour histogram equalization.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/equalize_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"equalise image histogram — equalize_image","text":"","code":"equalize_image(   vesalius_assay,   dimensions = seq(1, 3),   embedding = \"last\",   method = \"BalanceSimplest\",   N = 1,   smax = 1,   sleft = 1,   sright = 1,   lambda = 0.1,   up = 100,   down = 10,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/equalize_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"equalise image histogram — equalize_image","text":"vesalius_assay vesalius_assay object dimensions numeric vector latent space dimensions use. embedding character string describing embedding used. N numeric describing colour channel mapped back image (Higher N = Higher greyscale contrast). Used EqualizePiecewise smax numeric - upper limit contrast stretching. Used EqualizePiecewise sleft numeric - Range 0 - 100. Percentage pixel saturated left side histogram. Used BalanceSimplest sright numeric - Range 0 - 100. Percentage pixel saturated right side histogram. Used BalanceSimplest lambda numeric - strength background correction. Used SPE (Screened Poisson Equation). numeric - color value threshold upper limit. Used EqualizeDP. numeric color value threshold lower limit. Used EqualizeDP. verbose logical - progress message output. type character - histogram EQ type. Select : BalanceSimplest, EqualizePiecewise, SPE, EqualizeDP, EqualizeADP, ECDF (see details)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/equalize_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"equalise image histogram — equalize_image","text":"vesalius_assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/equalize_image.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"equalise image histogram — equalize_image","text":"Histogram equalization ensures image details amplified. turn, territories may extract greater precision. recommend balancing histogram prior smoothing. details method described , please refer https://cran.r-project.org/web/packages/imagerExtra/vignettes/gettingstarted.html","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/equalize_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"equalise image histogram — equalize_image","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run ves <- build_vesalius_embeddings(ves)  # simple EQ ves <- equalisz_image(ves, embedding = \"PCA\") } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/extend_boundary.html","id":null,"dir":"Reference","previous_headings":"","what":"extend image boundary around territory — extend_boundary","title":"extend image boundary around territory — extend_boundary","text":"extend image boundary around territory","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/extend_boundary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extend image boundary around territory — extend_boundary","text":"","code":"extend_boundary(territories, morphology_factor)"},{"path":"wonlab-cs.github.io/Vesalius/reference/extend_boundary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extend image boundary around territory — extend_boundary","text":"territories data frame containing x/y color value territories extend morphology_factor integer vector integers describing growth /shrink extent.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/extend_boundary.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"extend image boundary around territory — extend_boundary","text":"want avoid clipping territory sit edge image. avoid simply extend image boundary.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_grid.html","id":null,"dir":"Reference","previous_headings":"","what":"filter grid — filter_grid","title":"filter grid — filter_grid","text":"filtered stray barcodes/spatial indices.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter grid — filter_grid","text":"","code":"filter_grid(coordinates, filter_grid)"},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter grid — filter_grid","text":"coordinates data frame containing barcodes, / y coordinates barcode. filter_grid numeric describing size grid use proporiton array size.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter grid — filter_grid","text":"data.frame containing barcodes, x y coordinates.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"filter grid — filter_grid","text":"create grid data check grid section contain number barcodes lower quantile threshold. barcodes removed. stands, satisfied function. think restrictive likely applicable highly standardised assay.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_maps.html","id":null,"dir":"Reference","previous_headings":"","what":"filter mapped cells — filter_maps","title":"filter mapped cells — filter_maps","text":"filter mapped cells","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_maps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter mapped cells — filter_maps","text":"","code":"filter_maps(mapped, allow_duplicates, verbose)"},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_maps.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter mapped cells — filter_maps","text":"mapped data frame containing mapped cells allow_duplicates logical - duplicated matches reatained verbose logical - output progress messages","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_maps.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter mapped cells — filter_maps","text":"filtered mappped data frame","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"filter tiles — filter_tiles","title":"filter tiles — filter_tiles","text":"filter tiles based tile area share edge tesselation box","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter tiles — filter_tiles","text":"","code":"filter_tiles(tesselation, coordinates, filter_threshold)"},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_tiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter tiles — filter_tiles","text":"tesselation data.frame output deldir function coordinates data frame original coordinates filter_threshold numeric describing quantile threshold value use area filtering","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_tiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter tiles — filter_tiles","text":"list 2 data frame. 1 filtered tesselation results 2 filtered coordinate file.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/filter_tiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"filter tiles — filter_tiles","text":"want filter based size tile assumption large tiles probably due unpexted space. issue apply threshold, subtle pixel patterns lost wuhtin sea pixels. ueser really dont want filter anything set filter threshold pretty high though make sure get filter default.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_c_to_ves.html","id":null,"dir":"Reference","previous_headings":"","what":"convert cimg list to vesalius object embedding — format_c_to_ves","title":"convert cimg list to vesalius object embedding — format_c_to_ves","text":"convert cimg list vesalius object embedding","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_c_to_ves.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert cimg list to vesalius object embedding — format_c_to_ves","text":"","code":"format_c_to_ves(cimg, vesalius_assay, dims, embed = \"last\", verbose = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/format_c_to_ves.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert cimg list to vesalius object embedding — format_c_to_ves","text":"cimg cimg image list vesalius_assay vesalius_assay object dims integer vector embedding need updated embed character string embedding updated verbose logical progress message outputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_c_to_ves.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert cimg list to vesalius object embedding — format_c_to_ves","text":"vesalius_Assay obejct","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_call.html","id":null,"dir":"Reference","previous_headings":"","what":"format function call to list for log update — format_call","title":"format function call to list for log update — format_call","text":"format function call list log update","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"format function call to list for log update — format_call","text":"","code":"format_call(call)"},{"path":"wonlab-cs.github.io/Vesalius/reference/format_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"format function call to list for log update — format_call","text":"call function call argument list","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_deseq2.html","id":null,"dir":"Reference","previous_headings":"","what":"format counts for DESeq — format_counts_for_deseq2","title":"format counts for DESeq — format_counts_for_deseq2","text":"format counts DESeq","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_deseq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"format counts for DESeq — format_counts_for_deseq2","text":"","code":"format_counts_for_deseq2(seed, query)"},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_deseq2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"format counts for DESeq — format_counts_for_deseq2","text":"seed seed count matrix query query count matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_deseq2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"format counts for DESeq — format_counts_for_deseq2","text":"DESeq2 object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_deseq2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"format counts for DESeq — format_counts_for_deseq2","text":"Always adding pseudocount 1 avoid issues 0 counts. also force coercion int since DESeq handle numerics internal coersion.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_edger.html","id":null,"dir":"Reference","previous_headings":"","what":"format counts for edgeR — format_counts_for_edger","title":"format counts for edgeR — format_counts_for_edger","text":"format counts edgeR","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_edger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"format counts for edgeR — format_counts_for_edger","text":"","code":"format_counts_for_edger(seed, query)"},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_edger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"format counts for edgeR — format_counts_for_edger","text":"seed seed count matrix query query count matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_edger.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"format counts for edgeR — format_counts_for_edger","text":"DGEList object edgeR","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_logit.html","id":null,"dir":"Reference","previous_headings":"","what":"format counts for logistic regression — format_counts_for_logit","title":"format counts for logistic regression — format_counts_for_logit","text":"format counts logistic regression","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"format counts for logistic regression — format_counts_for_logit","text":"","code":"format_counts_for_logit(seed, query)"},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"format counts for logistic regression — format_counts_for_logit","text":"seed seed count matrix query query count matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_counts_for_logit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"format counts for logistic regression — format_counts_for_logit","text":"list merged counts meta data formated logit","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_ves_to_c.html","id":null,"dir":"Reference","previous_headings":"","what":"convert vesalius_assay to cimg images — format_ves_to_c","title":"convert vesalius_assay to cimg images — format_ves_to_c","text":"convert vesalius_assay cimg images","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_ves_to_c.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert vesalius_assay to cimg images — format_ves_to_c","text":"","code":"format_ves_to_c(vesalius_assay, dims, embed = \"last\", verbose = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/format_ves_to_c.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert vesalius_assay to cimg images — format_ves_to_c","text":"vesalius_assay vesalius_Assay object dims integer vector indicating number dimensions select embeddings. embed character indicating embedding selected. Default uses last embedding produced verbose logical progress message outputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/format_ves_to_c.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert vesalius_assay to cimg images — format_ves_to_c","text":"list cimg images","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/future_ves_to_cimg.html","id":null,"dir":"Reference","previous_headings":"","what":"convert ves embedding to image — future_ves_to_cimg","title":"convert ves embedding to image — future_ves_to_cimg","text":"convert ves embedding image","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/future_ves_to_cimg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert ves embedding to image — future_ves_to_cimg","text":"","code":"future_ves_to_cimg(i, embeddings, dims, tiles, full_image = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/future_ves_to_cimg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert ves embedding to image — future_ves_to_cimg","text":"index embedding use embeddings matrix - embedding matrix dims dimensions use tiles tile data frame used reconstruct images full_image logical - background returned well","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/future_ves_to_cimg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert ves embedding to image — future_ves_to_cimg","text":"cimg object embedding","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/future_ves_to_cimg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"convert ves embedding to image — future_ves_to_cimg","text":"using way run section parallel way slow otherwise. back ground represents pixels part Spatial data constiture \"rest\" pixels image. tends happen non rectangular assay needs fitted n * p n * p * d array.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_embeddings.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate embeddings. — generate_embeddings","title":"Generate embeddings. — generate_embeddings","text":"Generate image embddings spatial omics data.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_embeddings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate embeddings. — generate_embeddings","text":"","code":"generate_embeddings(   vesalius_assay,   dim_reduction = \"PCA\",   normalization = \"log_norm\",   use_counts = \"raw\",   dimensions = 30,   tensor_resolution = 1,   filter_grid = 1,   filter_threshold = 1,   nfeatures = 2000,   features = NULL,   min_cutoff = \"q5\",   remove_lsi_1 = TRUE,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_embeddings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate embeddings. — generate_embeddings","text":"vesalius_assay vesalius_assay object. dim_reduction string describing dimensionality reduction method used. One following: \"PCA\", \"PCA_L\", \"UMAP\", \"LSI\", \"LSI_UMAP\". normalization string describing normalisation method use. One following \"log_norm\", \"SCT\", \"TFIDF\", \"none\". use_counts string describing counts used generating emebddings. Default = \"raw\". See details. dimensions numeric describing number Principle Components Latent space dimension use. Default dimensions = 30 tensor_resolution numeric (range 0 - 1) describing compression ratio applied final image. Default = 1 filter_grid numeric (range 0 - 1) size grid used filtering outlier beads. Defined proportion total image size. Default = 0.1 filter_threshold numeric (range 0 -1) describing quantile threshold tiles retained (seed details) nfeatures numeric describing number variable features use. features custom set features generate embeddings min_cutoff used dimensionality reduction method LSI LSI_UMAP cutoff feature included VariableFeatures object. remove_lsi_1 logical used dimensionality reduction method LSI LSI_UMAP indicating first LSI component removed analysis usually captures sequencing depth (technical variation) verbose logical output progress message . Default = TRUE","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_embeddings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate embeddings. — generate_embeddings","text":"vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_embeddings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate embeddings. — generate_embeddings","text":"core principle behind vesalius convert spatial omics data image. generate_embeddings allows convert omics data stack gray scale images. stack hight equal number dimenions selected excluding UMAP embeddings 3 dimesnions availbale. tiles yet generated (see generate_tiles), pixel generated spatial coordinates provided. tiles already present, `generate_embeddings` skip tile creation step. algorithm broadly applicable many spatial omics assays. Vesalius provides 3 nornalization methods log_norm, SCTransform, TF-IDF. `use_counts` argument specifies count matrix used normalization. argument necessary use custom normalised count matrix. case, set argument name gave count matrix (see add_counts) `generate_embeddings` skip normalization use custom count matrix generate image embeddings. Note also possible add custom embeddings using add_embeddings function. Embeddings can created using custom set genes. genes can provided `features` argument form character vector. Note filter count matrix hence still access whole matrix downsteam analysis.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_embeddings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate embeddings. — generate_embeddings","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run  ves <- generate_embeddings(ves) # maybe we want to try a different method # both will be stored in the object ves <- generate_embeddings(ves, dim_reduction = \"UMAP\")  } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_spix.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate super pixels from ST — generate_spix","title":"Generate super pixels from ST — generate_spix","text":"Generate super pixels ST","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_spix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate super pixels from ST — generate_spix","text":"","code":"generate_spix(   vesalius_assay,   dimensions = seq(1, 3),   embedding = \"last\",   method = \"kmeans\",   col_resolution = 10,   compactness = 1,   scaling = 0.5,   threshold = 0.9,   index_selection = \"bubble\",   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_spix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate super pixels from ST — generate_spix","text":"vesalius_assay vesalius_assay object dimensions numeric vector latent space dimensions use. embedding character string describing embedding used. method character string method used segmentation. Select \"slic\", \"leiden_slic\",\"louvain_slic\" col_resolution numeric colour resolution used segmentation. (see details) compactness numeric - factor defining super pixel compaction. scaling numeric - scaling image ration super pixel segmentation. threshold numeric [0,1] - correlation threshold nearest neighbors generating segments super pixels. verbose logical - progress message output. k numeric - number closest super pixel neighbors consider generating segments super pixels","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_spix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate super pixels from ST — generate_spix","text":"vesalius_assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"generate tiles — generate_tiles","title":"generate tiles — generate_tiles","text":"generate pixel tiles punctual spatial assay coordinates","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"generate tiles — generate_tiles","text":"","code":"generate_tiles(   vesalius_assay,   tensor_resolution = 1,   filter_grid = 0.01,   filter_threshold = 0.995,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_tiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"generate tiles — generate_tiles","text":"vesalius_assay vesalius_assay object tensor_resolution numeric (range 0 - 1) describing compression ratio applied final image. Default = 1 filter_grid numeric (range 0 - 1) size grid used filtering outlier beads. Defined proportion total image size. Default = 0.1 filter_threshold numeric (range 0 -1) describing quantile verbose logical describing progress message outputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_tiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"generate tiles — generate_tiles","text":"data.frame containing barcodes, x coordinates pixel well original x/y coordinates","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/generate_tiles.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"generate tiles — generate_tiles","text":"function converts punctual coordinates pixel tiles. first step filter outlier beads. Essentially removing bead lies outside main assay (seed filter_grid). reqested resolution image can reduced redudcing relative distance coordinate pair (see reduce_tensor_resolution). Note resolution reduce spatial indices retained counts merged together (see adjust_counts). create tiles, coordinates expanded using Voronoi tesselation tile raterised .e \"filled pixel\" (see rasterise). Prior rasterisation, remove tiles area threshold. tiles artefacts tesselation algortihm creates \"box\" around points uses boudary generate tile. can also generate stray beads holes data.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_active_count_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"get last count matrix used — get_active_count_tag","title":"get last count matrix used — get_active_count_tag","text":"get last count matrix used","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_active_count_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get last count matrix used — get_active_count_tag","text":"","code":"get_active_count_tag(vesalius_assay)"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_active_count_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get last count matrix used — get_active_count_tag","text":"vesalius_assay vesalius_assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_active_count_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get last count matrix used — get_active_count_tag","text":"character string name last embedding used","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_active_embedding_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"get active embedding — get_active_embedding_tag","title":"get active embedding — get_active_embedding_tag","text":"get active embedding","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_active_embedding_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get active embedding — get_active_embedding_tag","text":"","code":"get_active_embedding_tag(vesalius_assay)"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_active_embedding_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get active embedding — get_active_embedding_tag","text":"vesalius_assay vesalius_assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_active_embedding_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get active embedding — get_active_embedding_tag","text":"character string name last embedding used","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_assay_names.html","id":null,"dir":"Reference","previous_headings":"","what":"get assay names from vesalius_assay — get_assay_names","title":"get assay names from vesalius_assay — get_assay_names","text":"get assay names vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_assay_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get assay names from vesalius_assay — get_assay_names","text":"","code":"get_assay_names(vesalius_assay)"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_assay_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get assay names from vesalius_assay — get_assay_names","text":"vesalius_assay vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_assay_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get assay names from vesalius_assay — get_assay_names","text":"assay names","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_coordinayes.html","id":null,"dir":"Reference","previous_headings":"","what":"get coordinates from vesalius_assay — get_coordinates","title":"get coordinates from vesalius_assay — get_coordinates","text":"get coordinates vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_coordinayes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get coordinates from vesalius_assay — get_coordinates","text":"","code":"get_coordinates(vesalius_assay, original = FALSE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_coordinayes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get coordinates from vesalius_assay — get_coordinates","text":"vesalius_assay vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_coordinayes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get coordinates from vesalius_assay — get_coordinates","text":"coordinate data frame","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_cost_contribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute mapping score contribution to mapping — get_cost_contribution","title":"Compute mapping score contribution to mapping — get_cost_contribution","text":"Compute mapping score contribution mapping","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_cost_contribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute mapping score contribution to mapping — get_cost_contribution","text":"","code":"get_cost_contribution(vesalius_assay, method = \"dispersion\", verbose = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_cost_contribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute mapping score contribution to mapping — get_cost_contribution","text":"vesalius_assay vesalius_assay object mapping query onto reference assay. method character - method use compute contribution currently dispersion availble verbose logical - print progress messages","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"get counts from vesalius_assay — get_counts","title":"get counts from vesalius_assay — get_counts","text":"get counts vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get counts from vesalius_assay — get_counts","text":"","code":"get_counts(vesalius_assay, type = \"raw\")"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get counts from vesalius_assay — get_counts","text":"vesalius_assay vesalius_assay type character string count matrix retrieve.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get counts from vesalius_assay — get_counts","text":"count matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_deg_metrics.html","id":null,"dir":"Reference","previous_headings":"","what":"get DEG metrics from groups — get_deg_metrics","title":"get DEG metrics from groups — get_deg_metrics","text":"get DEG metrics groups","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_deg_metrics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get DEG metrics from groups — get_deg_metrics","text":"","code":"get_deg_metrics(seed, query, params)"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_deg_metrics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get DEG metrics from groups — get_deg_metrics","text":"seed count matrix group 1 query count matrix group 2 params parameter list (pval,log_fc, min_pct)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_deg_metrics.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get DEG metrics from groups — get_deg_metrics","text":"Computes basic metrics fold change percent cells containing gene. functions used filter genes run differential expression genes. also compute effct size estimate running power analysis 2 uneven groups importFrom pwr pwr.2p2n.test","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_embeddings.html","id":null,"dir":"Reference","previous_headings":"","what":"get embeddings from vesalius_assay — get_embeddings","title":"get embeddings from vesalius_assay — get_embeddings","text":"get embeddings vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_embeddings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get embeddings from vesalius_assay — get_embeddings","text":"","code":"get_embeddings(vesalius_assay, active = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_embeddings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get embeddings from vesalius_assay — get_embeddings","text":"vesalius_assay vesalius_assay active logical active embedding return full embedding list.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_embeddings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get embeddings from vesalius_assay — get_embeddings","text":"embedding matrix","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_func_from_commit.html","id":null,"dir":"Reference","previous_headings":"","what":"get function name from commit list — get_func_from_commit","title":"get function name from commit list — get_func_from_commit","text":"get function name commit list","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_func_from_commit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get function name from commit list — get_func_from_commit","text":"","code":"get_func_from_commit(commit)"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_func_from_commit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get function name from commit list — get_func_from_commit","text":"commit commit list","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_func_from_commit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get function name from commit list — get_func_from_commit","text":"function name","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_func_from_commit.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"get function name from commit list — get_func_from_commit","text":"Using tail since make explicit function call using pkg::func get pkg well. Neat. want function","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"get markers from vesalius_assay — get_markers","title":"get markers from vesalius_assay — get_markers","text":"get markers vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get markers from vesalius_assay — get_markers","text":"","code":"get_markers(vesalius_assay, trial = \"last\")"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get markers from vesalius_assay — get_markers","text":"vesalius_assay vesalius_assay trial character string describing name DEG trial retrieve.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get markers from vesalius_assay — get_markers","text":"marker data frame","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_metric_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster query cells based on which reference cells they tend to mapped to — get_metric_clusters","title":"Cluster query cells based on which reference cells they tend to mapped to — get_metric_clusters","text":"Cluster query cells based reference cells tend mapped ","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_metric_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster query cells based on which reference cells they tend to mapped to — get_metric_clusters","text":"","code":"get_metric_clusters(   vesalius_assay,   use_cost = \"feature\",   cluster_method = \"hclust\",   trial = NULL,   group_identity = NULL,   ref_cells = NULL,   query_cells = NULL,   top_nn = 30,   h = 0.75,   k = NULL,   nn = 30,   resolution = 1,   verbose = TRUE,   ... )"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_metric_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster query cells based on which reference cells they tend to mapped to — get_metric_clusters","text":"vesalius_assay vesalius_assay object mapping query onto reference. use_cost character vector describing cost matrices used compare cells cluster_method character string - method used clustering (hclust, louvain, leiden) trial character string defining trial used clustering . NULL, search \"Cells\". ref_cells character vector reference cell barcodes (default use barcodes) query_cells character query cell barcodes (default use barcodes) top_nn int - many cells used define clustering similarity (see details) h numeric - normalized height use hclust cutoff [0,1] k int - number cluster obtain hclust nn int - number nearest neighbors use creating graph community clustering algorithms resolution numeric - clustering resolution parsed community clustering algorithms verbose logical - print output message group_identitiy character vector - specific substes trial used clustering default use labels present.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_metric_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster query cells based on which reference cells they tend to mapped to — get_metric_clusters","text":"vesalius_assay clustering results","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_metric_clusters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cluster query cells based on which reference cells they tend to mapped to — get_metric_clusters","text":"mapped cells sample, can identify cells tend map group cells. achieve , first create cost matrix serve basis find similar-mapping instances. cost matrix can constructed cost matrix used mapping phase. Next, query cell extract top_nn cells reference lowest cost. Using ordered index character label, compute jaccard index overlapping labels. Query cells high jaccard index tend map reference cells. use reciprocal define distance cells cluster cells based distance. approach used every clustering method provided. function add new column metric clustering results.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_neighborhood_signal.html","id":null,"dir":"Reference","previous_headings":"","what":"Method dispatch function for neighborhood selection — get_neighborhood_signal","title":"Method dispatch function for neighborhood selection — get_neighborhood_signal","text":"Method dispatch function neighborhood selection","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_neighborhood_signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method dispatch function for neighborhood selection — get_neighborhood_signal","text":"","code":"get_neighborhood_signal(coord, signal, method, k = 20, depth = 3, radius = 20)"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_neighborhood_signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method dispatch function for neighborhood selection — get_neighborhood_signal","text":"coord data.frame - coordinates assay (barcodes, x, y) signal matrix - matrix sparse matrix containing assay signal spatial indices contained coord method character - method use collect neighborhood - switch matches k int - many nearest neighbors KNN algorithm depth int - graph path depth define neighborhood 0 = self, 1 = direct neigbors, 2 = neighbors neighbors, etc radius - numeric - radius around center cell","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_neighborhood_signal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method dispatch function for neighborhood selection — get_neighborhood_signal","text":"matrix average signals spatial index neighborhood.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_signal.html","id":null,"dir":"Reference","previous_headings":"","what":"get cell signal from vesalius assays — get_signal","title":"get cell signal from vesalius assays — get_signal","text":"get cell signal vesalius assays","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get cell signal from vesalius assays — get_signal","text":"","code":"get_signal(   seed_assay,   query_assay,   signal,   dimensions = seq(1:30),   use_norm = \"raw\",   scale = FALSE,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get cell signal from vesalius assays — get_signal","text":"seed_assay vesalius_assay object query_assay vesalius_assay object signal character string signal taken dimensions int vector - signal embeddings embeddings selected use_norm charcater string counts use extracting signal scale logical - signal scaled verbose logical - progress messages outputed.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_signal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get cell signal from vesalius assays — get_signal","text":"list contain seed signal, query signal features used","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_territories.html","id":null,"dir":"Reference","previous_headings":"","what":"get territories from vesalius_assay — get_territories","title":"get territories from vesalius_assay — get_territories","text":"get territories vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_territories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get territories from vesalius_assay — get_territories","text":"","code":"get_territories(vesalius_assay)"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_territories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get territories from vesalius_assay — get_territories","text":"vesalius_assay vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_territories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get territories from vesalius_assay — get_territories","text":"territories data frame","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_tiles.html","id":null,"dir":"Reference","previous_headings":"","what":"get tiles from vesalius_assay — get_tiles","title":"get tiles from vesalius_assay — get_tiles","text":"get tiles vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_tiles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get tiles from vesalius_assay — get_tiles","text":"","code":"get_tiles(vesalius_assay)"},{"path":"wonlab-cs.github.io/Vesalius/reference/get_tiles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get tiles from vesalius_assay — get_tiles","text":"vesalius_assay vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/get_tiles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get tiles from vesalius_assay — get_tiles","text":"tiles data frame","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/globalise_territories.html","id":null,"dir":"Reference","previous_headings":"","what":"globalise territories converts territories number from territory values per segment to territory values overall the entire spatial omics assay. — globalise_territories","title":"globalise territories converts territories number from territory values per segment to territory values overall the entire spatial omics assay. — globalise_territories","text":"globalise territories converts territories number territory values per segment territory values overall entire spatial omics assay.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/globalise_territories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"globalise territories converts territories number from territory values per segment to territory values overall the entire spatial omics assay. — globalise_territories","text":"","code":"globalise_territories(img)"},{"path":"wonlab-cs.github.io/Vesalius/reference/globalise_territories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"globalise territories converts territories number from territory values per segment to territory values overall the entire spatial omics assay. — globalise_territories","text":"img vesalius territory data frame containing segments new territory trial","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/globalise_territories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"globalise territories converts territories number from territory values per segment to territory values overall the entire spatial omics assay. — globalise_territories","text":"data frame adjusted terriroty values","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/graph_neighborhood.html","id":null,"dir":"Reference","previous_headings":"","what":"Graph depth method based method to select niche — graph_neighborhood","title":"Graph depth method based method to select niche — graph_neighborhood","text":"Graph depth method based method select niche","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/graph_neighborhood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Graph depth method based method to select niche — graph_neighborhood","text":"","code":"graph_neighborhood(coord, depth)"},{"path":"wonlab-cs.github.io/Vesalius/reference/graph_neighborhood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Graph depth method based method to select niche — graph_neighborhood","text":"coord data.frame - coordinates spatial indices assay depth int - graph path depth define neighborhood 0 = self, 1 = direct neigbors, 2 = neighbors neighbors, etc","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/graph_neighborhood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Graph depth method based method to select niche — graph_neighborhood","text":"list containing barcodes  neighbors spatial index.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/graph_path_length.html","id":null,"dir":"Reference","previous_headings":"","what":"get path length in a graph — graph_path_length","title":"get path length in a graph — graph_path_length","text":"get path length graph","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/graph_path_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get path length in a graph — graph_path_length","text":"","code":"graph_path_length(graph)"},{"path":"wonlab-cs.github.io/Vesalius/reference/graph_path_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get path length in a graph — graph_path_length","text":"graph graph data.frame","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/hclust_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Hiearchal clustering of mapping scores for co mapping events — hclust_scores","title":"Hiearchal clustering of mapping scores for co mapping events — hclust_scores","text":"Hiearchal clustering mapping scores co mapping events","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/hclust_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hiearchal clustering of mapping scores for co mapping events — hclust_scores","text":"","code":"hclust_scores(score, h, k, verbose)"},{"path":"wonlab-cs.github.io/Vesalius/reference/hclust_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hiearchal clustering of mapping scores for co mapping events — hclust_scores","text":"score matrix containing mapping scores h numeric representing normalized height used clustering (normalized ensure 0 1) k int - number clusters verbose logical - print progress messages","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/identify_markers.html","id":null,"dir":"Reference","previous_headings":"","what":"identify_markers computes differential observation expression between selected territories. — identify_markers","title":"identify_markers computes differential observation expression between selected territories. — identify_markers","text":"identify_markers computes differential observation expression selected territories.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/identify_markers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"identify_markers computes differential observation expression between selected territories. — identify_markers","text":"","code":"identify_markers(   vesalius_assay,   trial = \"last\",   norm_method = \"last\",   seed = NULL,   query = NULL,   cells = NULL,   sample = FALSE,   method = \"wilcox\",   log_fc = 0.25,   pval = 0.05,   min_pct = 0.05,   min_spatial_index = 10,   genes = NULL,   verbose = TRUE,   ... )"},{"path":"wonlab-cs.github.io/Vesalius/reference/identify_markers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"identify_markers computes differential observation expression between selected territories. — identify_markers","text":"vesalius_assay vesalius_assay trial character string - territory trial used select territorires. Default last one computed norm_method charcater string - normalisation method used. seed Integer vector integers describing territories included group 1 differential gene expression analysis. query Integer vector integers describing territories included group 2 differential gene expression analysis. Default = NULL cells character vector containing barcodes cells interest. sample logical method character describing statistical test use order extract differantial gene expression. Select : \"wilcox\", \"t.test\", \"chisq\", \"fisher.exact\", \"DEseq2\", \"QLF\", \"LRT\",\"logit\" log_fc numeric describing minimum log fold change value differential gene expression. Default set 0.25. pval numeric pval threshold. Default set 0.05 min_pct numeric defining minimum percentage cells contain given gene. Deault set 0.05 min_spatial_index integer defining minimum number barcodes territory. genes character vector - vector gene names use directly DEG analysis. verbose logical - progress message output ... parameters parsed DESeq2 edgeR (functional)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/identify_markers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"identify_markers computes differential observation expression between selected territories. — identify_markers","text":"vesalius_assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/identify_markers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"identify_markers computes differential observation expression between selected territories. — identify_markers","text":"Identifying markers key aspect spatial data analysis. functions select territory trial use. Note can territory trial run, including color segments, isolated territories, dilated eroded territories layered territories. default, identify_markers takes last one computed. normalisation method refers normalisation method applied count matrices. use, DESeq2, QLF (edgeR) LRT (edgeR), raw counts selected ignore cother command. requirement packages. cells interested comparing territories, can simply parse character vector containing barcodes cells interest. identify_markers automatically retrieve cells territory use cell comparison. Differentially expressed genes/oberservations computed stored vesalius_assay object. allows run multiple trial trials sorted within object. retrieve object, can use get_markers","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/identify_markers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"identify_markers computes differential observation expression between selected territories. — identify_markers","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run ves <- build_vesalius_embeddings(ves)  # simple smoothing ves <- smooth_image(ves, dimensions = seq(1, 30))  # quick segmentation ves <- segment_image(ves, dimensions = seq(1, 30))  # isolate territories ves <- isolate_territories(ves)  # identify markers ves <- identify_markers(ves, seed = c(3,5), query = 8) deg <- get_markers(ves) } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/image_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"image_plot - plotting vesalius embeddings — image_plot","title":"image_plot - plotting vesalius embeddings — image_plot","text":"image_plot - plotting vesalius embeddings","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/image_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"image_plot - plotting vesalius embeddings — image_plot","text":"","code":"image_plot(   vesalius_assay,   dimensions = seq(1, 3),   embedding = \"last\",   cex = 10 )"},{"path":"wonlab-cs.github.io/Vesalius/reference/image_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"image_plot - plotting vesalius embeddings — image_plot","text":"vesalius_assay vesalius_assay object dimensions dimensions use generate image (see details) embedding character string descrining embedding used image generation. cex numeric - font point size resizing factor.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/image_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"image_plot - plotting vesalius embeddings — image_plot","text":"ggplot object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/image_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"image_plot - plotting vesalius embeddings — image_plot","text":"generated embeddings, can visualise embeddings using image_plot function. function generate ggplot object representing embedding image containing pixels. can select dimension combination desire, however can select 1 3 dimensions visualise time. either generate grey scale image RGB images. function always applied active embedding. default, last generated. means can also use function visualise effect smoothing, equalization, regularisation segmentation. Please note using \"louvain\" \"leiden\" image segmentation, always generate grey scale images even select multiple dimensions. \"Kmeans\" hand still produce RGB color segments. usage function remains processing steps.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/image_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"image_plot - plotting vesalius embeddings — image_plot","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run  ves <- build_vesalius_embeddings(ves) # Plot 1st 3 PCs p <- image_plot(ves)  } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/initialize_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"initialize matched data frame — initialize_matches","title":"initialize matched data frame — initialize_matches","text":"initialize matched data frame","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/initialize_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"initialize matched data frame — initialize_matches","text":"","code":"initialize_matches(cost_matrix)"},{"path":"wonlab-cs.github.io/Vesalius/reference/initialize_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"initialize matched data frame — initialize_matches","text":"cost_matrix matrix containing cost cell pair","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/initialize_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"initialize matched data frame — initialize_matches","text":"data.frame templated contain best matching pairs","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/int_sctransform.html","id":null,"dir":"Reference","previous_headings":"","what":"SCTransform — int_sctransform","title":"SCTransform — int_sctransform","text":"SCTransform pre-processing Seurat","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/int_sctransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SCTransform — int_sctransform","text":"","code":"int_sctransform(counts, nfeatures)"},{"path":"wonlab-cs.github.io/Vesalius/reference/int_sctransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SCTransform — int_sctransform","text":"counts seurat object containing counts nfeatures number top variable features select","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/int_sctransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SCTransform — int_sctransform","text":"list seurat object used later normalised counts stored vesalius object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/integrate_assays.html","id":null,"dir":"Reference","previous_headings":"","what":"integrate 2 vesalius assays — integrate_assays","title":"integrate 2 vesalius assays — integrate_assays","text":"integrate 2 vesalius assays","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/integrate_assays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"integrate 2 vesalius assays — integrate_assays","text":"","code":"integrate_assays(   mapped,   reference,   method = \"CCAIntegration\",   nfeatures = 2000,   signal = \"variable_features\",   dimensions = 30,   infer = TRUE,   use_counts = \"raw\",   labels_mapped = NULL,   labels_reference = NULL,   regenerate_tiles = TRUE,   tensor_resolution = 1,   filter_grid = 1,   filter_threshold = 1,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/integrate_assays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"integrate 2 vesalius assays — integrate_assays","text":"mapped vesalius_assay object - mapped veslius assay (map_assays) reference vesalius_assay object - reference vesalius_assay (seed) method character - count integration method (methods provided Seurat v5) nfeatures integer - number variable features sue integration. signal character - defining signal returned: variable_features, all_features custom gene list. dimensions interger - number dimensions integrated latent space dimensions. infer logical - back infer original counts reversing reduced dimensional space roations. use_counts character - count matrix use integration labels_mapped character - columns mapped data assay merged reference data (see details) labels_reference character - columns reference data assay merged mapped data (see details) regenerate_tiles logical - tiles regenrated integrated coordinates verbose logical - progressed message printed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/integrate_assays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"integrate 2 vesalius assays — integrate_assays","text":"vesalius_assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/integrate_assays.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"integrate 2 vesalius assays — integrate_assays","text":"mapping coordinates query onto reference, vesalius provides way integrate assays together. function : * Integrate Counts using Seurat * Merge coordinates (adding jitter avoid overlapping coordinayes) * Merge territories (pair-wise merging using labels_mapped labels_reference - everything else separate column). also infer log nomalized counts CCA latent space. final output function vesalius_assay object containing coordinates mapped reference, integrated latent space (e.g.CCA) integrated counts, merged territories, additional meta data. noted object contain tiles. use vesalius_assay , add tiles using generate_tiles","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/integrate_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Integrate counts using Seurat — integrate_counts","title":"Integrate counts using Seurat — integrate_counts","text":"Integrate counts using Seurat","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/integrate_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Integrate counts using Seurat — integrate_counts","text":"","code":"integrate_counts(   matched,   reference,   method = \"HarmonyIntegration\",   nfeatures = 2000,   dimensions = 30,   infer = FALSE,   signal = \"variable_features\",   verbose )"},{"path":"wonlab-cs.github.io/Vesalius/reference/integrate_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Integrate counts using Seurat — integrate_counts","text":"matched matrix - matrix containing counts matched/mapped assay reference matrix - matrix containing counts reference assay method character - Seurat integration method use nfeatures integer - number features use integration dimensions interger - number dimensions integrated latent space dimensions. infer logical - back infer original counts reversing reduced dimensional space roations. signal character - defining signal returned: variable_features, all_features custom gene list. verbose logical - print output messages","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/interlace_embeds.html","id":null,"dir":"Reference","previous_headings":"","what":"interlace image stack between seed and query — interlace_embeds","title":"interlace image stack between seed and query — interlace_embeds","text":"interlace image stack seed query","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/interlace_embeds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"interlace image stack between seed and query — interlace_embeds","text":"","code":"interlace_embeds(seed, query, dimensions)"},{"path":"wonlab-cs.github.io/Vesalius/reference/interlace_embeds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"interlace image stack between seed and query — interlace_embeds","text":"seed matrix - seed embedding image stack query matrix - query embedding image stack dimensions int vector describing embeddings selected","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/interlace_embeds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"interlace image stack between seed and query — interlace_embeds","text":"embedding matrix containing seed embeddings + query embeddings.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/interlace_embeds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"interlace image stack between seed and query — interlace_embeds","text":"Takes selected embedding seed query creates interlaced embedding matrix starting first seed embedding","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/internal_smooth.html","id":null,"dir":"Reference","previous_headings":"","what":"internal smoothing function Function that does the smoothing on individual image array — internal_smooth","title":"internal smoothing function Function that does the smoothing on individual image array — internal_smooth","text":"internal smoothing function Function smoothing individual image array","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/internal_smooth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"internal smoothing function Function that does the smoothing on individual image array — internal_smooth","text":"","code":"internal_smooth(   image,   method = c(\"median\", \"iso\", \"box\"),   iter = 1,   sigma = 1,   box = 20,   threshold = 0,   neuman = TRUE,   gaussian = TRUE,   na.rm = FALSE,   across_levels = \"min\" )"},{"path":"wonlab-cs.github.io/Vesalius/reference/internal_smooth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"internal smoothing function Function that does the smoothing on individual image array — internal_smooth","text":"image cimg array method character describing smoothing method use \"median\" , \"iso\"  \"box\" combination . iter numeric - number smoothing iteration sigma numeric - standard deviation associated isoblur (Gaussian) box numeric describing box size (centered around center pixel) smoothing threshold numeric - discard pixels low value (cutoff threshold applied box/median blurs). neuman logical describing Neumann boundary conditions used, Dirichlet otherwise (default true, Neumann) gaussian logical - use gaussian filter na.rm logical describing NA values removed across_levels character - method used account multiple smoothing levels (see details). Select : \"min\",\"mean\", \"max\"","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/isolate_territories.html","id":null,"dir":"Reference","previous_headings":"","what":"isolating territories from vesalius image segments — isolate_territories","title":"isolating territories from vesalius image segments — isolate_territories","text":"isolating territories vesalius image segments","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/isolate_territories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"isolating territories from vesalius image segments — isolate_territories","text":"","code":"isolate_territories(   vesalius_assay,   method = \"distance\",   trial = \"last\",   capture_radius = 0.05,   global = TRUE,   min_spatial_index = 10,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/isolate_territories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"isolating territories from vesalius image segments — isolate_territories","text":"vesalius_assay vesalius_Assay object method character describing barcode pooling method. Currently, \"distance\" availble trial character string describing segmentation trial use. Default \"last\" last segmentation trial used. capture_radius numeric - proportion maximum distance barcodes used pool barcodes together (range 0 - 1). global logical - TRUE, territories numbered across colour segments. FALSE, territories numbered within colour segment. min_spatial_index integer - minimum number barcodes/spots/beads required territory verbose logical - progress message output.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/isolate_territories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"isolating territories from vesalius image segments — isolate_territories","text":"vesalius_assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/isolate_territories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"isolating territories from vesalius image segments — isolate_territories","text":"Image segments can subdivided 2D seperated territorires. accomplished pooling barcodes associated colour cluster territories based distance barcode. First, isolate_territories considers maximum distance beads. capture_radius define proportion distance considered. Second, seed barcode selected barcodes within capture distance seed barcode pooled together. process applied barcodes selected manner. process repeated barcodes pooled territory. still barcodes remaining, new seed barcode selected whole process repeated. NOTE : Territory isolation applied colour segment independently. territory contain enough barcodes, pooled isolated territory. territory contains isolated territories regardless colour cluster origin.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/isolate_territories.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"isolating territories from vesalius image segments — isolate_territories","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run ves <- build_vesalius_embeddings(ves)  # simple smoothing ves <- smooth_image(ves, dimensions = seq(1, 30))  # quick segmentation ves <- segment_image(ves, dimensions = seq(1, 30))  # isolate territories ves <- isolate_territories(ves) } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/jitter_coord.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial coordinates - alt — jitter_coord","title":"Spatial coordinates - alt — jitter_coord","text":"Spatial coordinates - alt","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/jitter_coord.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial coordinates - alt — jitter_coord","text":"","code":"data(vesalius)"},{"path":"wonlab-cs.github.io/Vesalius/reference/jitter_coord.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial coordinates - alt — jitter_coord","text":"coordinate data frame jitter_coord Sampled, flipped, jittered coordinates Puck_200815 taken slide-seV2","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/jitter_coord.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial coordinates - alt — jitter_coord","text":"https://singlecell.broadinstitute.org/single_cell/study/SCP948/robust-decomposition--cell-type-mixtures--spatial-transcriptomics#study-download","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/jitter_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Count matrix for vesalius - alt — jitter_counts","title":"Count matrix for vesalius - alt — jitter_counts","text":"Count matrix vesalius - alt","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/jitter_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count matrix for vesalius - alt — jitter_counts","text":"","code":"data(vesalius)"},{"path":"wonlab-cs.github.io/Vesalius/reference/jitter_counts.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Count matrix for vesalius - alt — jitter_counts","text":"sparse count matrix counts Sampled jittered counts Puck_200815 taken slide-seV2","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/jitter_counts.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Count matrix for vesalius - alt — jitter_counts","text":"https://singlecell.broadinstitute.org/single_cell/study/SCP948/robust-decomposition--cell-type-mixtures--spatial-transcriptomics#study-download","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/joint_territories.html","id":null,"dir":"Reference","previous_headings":"","what":"Jointly measured spatial omic assays territories — joint_territories","title":"Jointly measured spatial omic assays territories — joint_territories","text":"Jointly measured spatial omic assays territories","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/joint_territories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Jointly measured spatial omic assays territories — joint_territories","text":"","code":"joint_territories(   mod1,   mod2,   dimensions = seq(1, 30),   embedding = \"last\",   method = \"interlace\",   norm_method = \"log_norm\",   dim_reduction = \"PCA\",   signal = \"variable_features\",   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/joint_territories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Jointly measured spatial omic assays territories — joint_territories","text":"mod1 vesalius_assay object containing first modality mod2 vesalius_assay objecty containing second modality dimensions numeric vector describing latent space dimensions use intergration method character - integration method. interlace - mean - concat available options norm_method character - count values use integration using concat method dim_reduction characater - dim reduction methods used concat integration (PCA,PCA_L,UMAP,LSI,LSI_UMAP,NMF) verbose logical - progress message outputed console.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/joint_territories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Jointly measured spatial omic assays territories — joint_territories","text":"vesalius object containing new image embeddings","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/kmeans_segmentation.html","id":null,"dir":"Reference","previous_headings":"","what":"kmeans segmentation function — kmeans_segmentation","title":"kmeans segmentation function — kmeans_segmentation","text":"kmeans segmentation function","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/kmeans_segmentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"kmeans segmentation function — kmeans_segmentation","text":"","code":"kmeans_segmentation(   vesalius_assay,   dimensions = seq(1, 3),   col_resolution = 10,   embedding = \"last\",   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/kmeans_segmentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"kmeans segmentation function — kmeans_segmentation","text":"vesalius_assay vesalius_assay dimensions numeric vector latent space dimensions use. col_resolution integer vector positive integers. Colour depth used segmentation. embedding character string describing embedding used. verbose logical - progress message output.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/kmeans_segmentation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"kmeans segmentation function — kmeans_segmentation","text":"list containing segmented image active embedding territory cluster barcodes.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/kmeans_segmentation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"kmeans segmentation function — kmeans_segmentation","text":"Run interaive kmeans segmentation possibility run multiple rounds smoothing.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/knn_neighborhood.html","id":null,"dir":"Reference","previous_headings":"","what":"k nearest neighbors - niche selection — knn_neighborhood","title":"k nearest neighbors - niche selection — knn_neighborhood","text":"k nearest neighbors - niche selection","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/knn_neighborhood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"k nearest neighbors - niche selection — knn_neighborhood","text":"","code":"knn_neighborhood(coord, k)"},{"path":"wonlab-cs.github.io/Vesalius/reference/knn_neighborhood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"k nearest neighbors - niche selection — knn_neighborhood","text":"coord data.frame - coordinates spatial indices assay k int - number nearest neighbors select","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/knn_neighborhood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"k nearest neighbors - niche selection — knn_neighborhood","text":"list containing barcodes nearest neighbors spatial index.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/layer_territory.html","id":null,"dir":"Reference","previous_headings":"","what":"layer_territory generates layer from the outside to the inside of a territory — layer_territory","title":"layer_territory generates layer from the outside to the inside of a territory — layer_territory","text":"layer_territory generates layer outside inside territory","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/layer_territory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"layer_territory generates layer from the outside to the inside of a territory — layer_territory","text":"","code":"layer_territory(   vesalius_assay,   territory = NULL,   trial = \"last\",   layer_depth = NULL,   morphology_factor = 0,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/layer_territory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"layer_territory generates layer from the outside to the inside of a territory — layer_territory","text":"vesalius_assay vesalius_assay object territory integer vector integers desrcining territories morph. trial character string - territory trial used select territorires. Default last one computed layer_depth integer describing number final layers. morphology_factor integer vector integers describing growth /shrink extent. verbose logical - progress message output.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/layer_territory.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"layer_territory generates layer from the outside to the inside of a territory — layer_territory","text":"vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/layer_territory.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"layer_territory generates layer from the outside to the inside of a territory — layer_territory","text":"territory can subdivided series layers. layer considered seperate territory can treated functions identify_markers territory_plot. However, territories present labled \"\". means time can work single territory time.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/layer_territory.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"layer_territory generates layer from the outside to the inside of a territory — layer_territory","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run ves <- build_vesalius_embeddings(ves)  # simple smoothing ves <- smooth_image(ves, dimensions = seq(1, 30))  # quick segmentation ves <- segment_image(ves, dimensions = seq(1, 30))  # isolate territories ves <- isolate_territories(ves)  # morph territory  ves <- layer_territory(ves)  # view territory morphing territory_plot(ves) } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/leiden_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Using Leiden community clustering to for co-mapping events — leiden_scores","title":"Using Leiden community clustering to for co-mapping events — leiden_scores","text":"Using Leiden community clustering co-mapping events","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/leiden_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using Leiden community clustering to for co-mapping events — leiden_scores","text":"","code":"leiden_scores(score, resolution, nn, verbose)"},{"path":"wonlab-cs.github.io/Vesalius/reference/leiden_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using Leiden community clustering to for co-mapping events — leiden_scores","text":"score matrix containing mapping scores nn int - number nearest neighbors use graph construction verbose logical - print output messages resoltuion numeric - clustering resolution","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/leiden_segmentation.html","id":null,"dir":"Reference","previous_headings":"","what":"leiden segmentation — leiden_segmentation","title":"leiden segmentation — leiden_segmentation","text":"using leiden clustering cluster colors","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/leiden_segmentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"leiden segmentation — leiden_segmentation","text":"","code":"leiden_segmentation(   vesalius_assay,   dimensions = seq(1, 3),   col_resolution = 0.01,   embedding = \"last\",   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/leiden_segmentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"leiden segmentation — leiden_segmentation","text":"vesalius_assay vesalius_assay object dimensions embedding dimensions used clustering col_resolution clustering resolution used leiden embedding embedding type used clustering verbose logical progress message outputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/leiden_segmentation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"leiden segmentation — leiden_segmentation","text":"list updated segmented embedding values segment territories.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/log_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"log norm — log_norm","title":"log norm — log_norm","text":"log normalisation, scaling top variable features","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/log_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"log norm — log_norm","text":"","code":"log_norm(counts, nfeatures)"},{"path":"wonlab-cs.github.io/Vesalius/reference/log_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"log norm — log_norm","text":"counts seurat object containing counts nfeatures number top variable features select","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/log_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"log norm — log_norm","text":"list seurat object used later normalised counts stored vesalius object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/louvain_scores.html","id":null,"dir":"Reference","previous_headings":"","what":"Using Louvain community clustering to for co-mapping events — louvain_scores","title":"Using Louvain community clustering to for co-mapping events — louvain_scores","text":"Using Louvain community clustering co-mapping events","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/louvain_scores.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using Louvain community clustering to for co-mapping events — louvain_scores","text":"","code":"louvain_scores(score, resolution, nn, verbose)"},{"path":"wonlab-cs.github.io/Vesalius/reference/louvain_scores.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using Louvain community clustering to for co-mapping events — louvain_scores","text":"score matrix containing mapping scores nn int - number nearest neighbors use graph construction verbose logical - print output messages resoltuion numeric - clustering resolution","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/louvain_segmentation.html","id":null,"dir":"Reference","previous_headings":"","what":"louvain segmentation — louvain_segmentation","title":"louvain segmentation — louvain_segmentation","text":"using leiden clustering cluster colors","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/louvain_segmentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"louvain segmentation — louvain_segmentation","text":"","code":"louvain_segmentation(   vesalius_assay,   dimensions = seq(1, 3),   col_resolution = 0.01,   embedding = \"last\",   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/louvain_segmentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"louvain segmentation — louvain_segmentation","text":"vesalius_assay vesalius_assay object dimensions embedding dimensions used clustering col_resolution clustering resolution used leiden embedding embedding type used clustering verbose logical progress message outputed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/louvain_segmentation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"louvain segmentation — louvain_segmentation","text":"list updated segmented embedding values segment territories.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/map_assays.html","id":null,"dir":"Reference","previous_headings":"","what":"Aling and integrate spatial assay from the same modality using super pixels — map_assays","title":"Aling and integrate spatial assay from the same modality using super pixels — map_assays","text":"Aling integrate spatial assay modality using super pixels","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/map_assays.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aling and integrate spatial assay from the same modality using super pixels — map_assays","text":"","code":"map_assays(   seed_assay,   query_assay,   signal = \"variable_features\",   use_cost = c(\"feature\", \"niche\"),   method = \"pearson\",   neighborhood = \"knn\",   k = 20,   radius = 0.05,   depth = 1,   dimensions = seq(1, 30),   batch_size = 10000,   epochs = 1,   allow_duplicates = TRUE,   threshold = 0.3,   filter_cells = FALSE,   use_norm = \"raw\",   scale = FALSE,   custom_cost = NULL,   seed_territory_labels = \"Territory\",   query_territory_labels = \"Territory\",   seed_meta_labels = NULL,   query_meta_labels = NULL,   jitter = 0,   digits = 5,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/map_assays.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aling and integrate spatial assay from the same modality using super pixels — map_assays","text":"seed_assay vesalius_assay object - data mapped query_assay vesalius_assay objecy - data map signal character (variable_features, all_features, embeddings, custom) -  used cell signal generate cost matrix. Seed details use_cost character string defining total cost computer Available: feature, niche, territory, composition (See details combinations custom matrices) neighborhood character - neighborhood selected? \"knn\", \"radius\", \"graph\"(See details) k int ]2, n_points] number neareset neighbors considered neighborhodd computation. radius numeric ]0,1[ proportion max distance points consider neighborhood depth int [1, NA] graph depth cell consider neighborhood (See details) dimensions Int vector containing latent space dimensions use batch_size number points per batch query assignment problem solving threshold score threshold indicices removed. Scores always 0 1 use_norm character - count data use scale logical - signal scaled custom_cost matrix - matrix size n (query cells) p (seed cells) containing custom cost matrix. Used instead vesalius cost matrix verbose logical - noisy boy?","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/map_assays.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aling and integrate spatial assay from the same modality using super pixels — map_assays","text":"vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/map_assays.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aling and integrate spatial assay from the same modality using super pixels — map_assays","text":"goal assign best matching point seed set query set. , map_assays first extract biological signal. can latent space embeddings per cell, using gene counts (modality). using gene counts, options available . First, can select \"variable_features\" vesalius find intersection variable features seed_assay query_assay. \"all_features\" find intersection genes across assays (even highly variable). Finally, can also select custom gene vector, containing gene set interested . second step create cost matrix. creation cost matrix achieved pair-wise sum various cost matrices. default, map_assays function use \"feature\" \"niche\" cost matrices. feature matrix computes pearson correlation seed query using ever signal defined signal argument (variable_features) compute correlation shared variable features seed query). niche matrix computed using pearson correlation niche expression profiles (based signal). Niche defined using neighborhood argument knn represent k nearest neighbors algorithm (k defining number nearest neighbors), depth represents graph depth local neighborhood graph, radius defining spatial radius surrunding center cell. singal (expression embedding) average across cells niche. territory matrix compare average signal vesalius territories seed query. composition matrix compute frequency aware jaccard index cell types present niche. Cell types must assigned seed query vesalius objects  (See add_cells function) Total cost matrix computed computing pairwise sum complement (1 - p ) cost matrix. cost matrix parsed Kuhn–Munkres algorithm generate point pairs minimize overall cost. Since algorithm complexity O(n3), can time consuming run larger data sets. , mapping approximated dividing seed query batches defined batch size. exact mapping ensure batch_size larger number cells query seed. Finaly matches found, coordinates mapped corresponding point new object returned.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/map_assays.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aling and integrate spatial assay from the same modality using super pixels — map_assays","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # Create Vesalius object for processing vesalius <- build_vesalius_assay(coordinates, counts) jitter_ves <- build_vesalius_assay(jitter_coord, jitter_counts) mapped <- map_assays(vesalius, jitter_ves) } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/map_index.html","id":null,"dir":"Reference","previous_headings":"","what":"LAPVJ solver — map_index","title":"LAPVJ solver — map_index","text":"LAPVJ solver","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/map_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LAPVJ solver — map_index","text":"","code":"map_index(batch)"},{"path":"wonlab-cs.github.io/Vesalius/reference/map_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LAPVJ solver — map_index","text":"batch cost matrix batch solved","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/map_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LAPVJ solver — map_index","text":"data frame best matches batch","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/match_cells.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function returning cell type label match as numiric — match_cells","title":"Internal function returning cell type label match as numiric — match_cells","text":"Internal function returning cell type label match numiric","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/match_cells.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function returning cell type label match as numiric — match_cells","text":"","code":"match_cells(idx, query_labels, seed_labels)"},{"path":"wonlab-cs.github.io/Vesalius/reference/match_cells.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function returning cell type label match as numiric — match_cells","text":"idx numeric - used iterate labels query_labels cell type labels query seed_labels cell type labels seed","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/match_cells.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function returning cell type label match as numiric — match_cells","text":"binary numeric vector","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/merge_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge coordinates from 2 vesalius assays — merge_coordinates","title":"Merge coordinates from 2 vesalius assays — merge_coordinates","text":"Merge coordinates 2 vesalius assays","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/merge_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge coordinates from 2 vesalius assays — merge_coordinates","text":"","code":"merge_coordinates(matched, reference, barcodes)"},{"path":"wonlab-cs.github.io/Vesalius/reference/merge_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge coordinates from 2 vesalius assays — merge_coordinates","text":"matched matched vesalius_assay object (query object) reference reference vesalius_assay object barcodes barcodes use matching merging","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/merge_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge coordinates from 2 vesalius assays — merge_coordinates","text":"merged coordinate data frame (barcodes, x, y)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/merge_coordinates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge coordinates from 2 vesalius assays — merge_coordinates","text":"Simple merge followed duplication check. Duplicated coordinates produce errors running tesselation. Just adding noise","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/merge_territories.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge territories using specified labels — merge_territories","title":"Merge territories using specified labels — merge_territories","text":"Merge territories using specified labels","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/merge_territories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge territories using specified labels — merge_territories","text":"","code":"merge_territories(   matched,   reference,   coordinates,   labels_mapped,   labels_reference )"},{"path":"wonlab-cs.github.io/Vesalius/reference/merge_territories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge territories using specified labels — merge_territories","text":"matched matched (query) vesalius_assay object reference reference vesalius_assay coordinates coord data frame merging (see merge_coordinates) labels_mapped Territory columns merge mapped object labels_reference Territory columns merge reference object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/merge_territories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge territories using specified labels — merge_territories","text":"territory data frame merged columns","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/merge_territories.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Merge territories using specified labels — merge_territories","text":"Territory data frame generally contain lot information depending much analysis user run. (Segments, Cells, territories, morphology). Using pariwise matching labels parse labels_mapped labels_reference data merged single column. new column added distinguish samples. columns present labels argument retain name NA added cell present data set (similar left right joins).","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/message_switch.html","id":null,"dir":"Reference","previous_headings":"","what":"switch message output based in input — message_switch","title":"switch message output based in input — message_switch","text":"switch message output based input","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/message_switch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"switch message output based in input — message_switch","text":"","code":"message_switch(type, verbose = TRUE, ...)"},{"path":"wonlab-cs.github.io/Vesalius/reference/message_switch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"switch message output based in input — message_switch","text":"type name message output produce verbose logical message outputed ... parameter","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/message_switch.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"switch message output based in input — message_switch","text":"Essentially, message types listed giant switch. type defines message want output. select named arguments `...` parse required. Adding message straight forward simply using template switch types. also means can add remove messages without causing errors. might lead dead code, better dead code buggy code undefined functions...","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/min_max.html","id":null,"dir":"Reference","previous_headings":"","what":"min max normalisation — min_max","title":"min max normalisation — min_max","text":"min max normalisation","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/min_max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"min max normalisation — min_max","text":"","code":"min_max(x)"},{"path":"wonlab-cs.github.io/Vesalius/reference/min_max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"min max normalisation — min_max","text":"x numeric vector","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/min_max.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"min max normalisation — min_max","text":"min max nornalised vector","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/neighborhood_signal.html","id":null,"dir":"Reference","previous_headings":"","what":"compute average expression of local neighborhood — neighborhood_signal","title":"compute average expression of local neighborhood — neighborhood_signal","text":"compute average expression local neighborhood","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/neighborhood_signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute average expression of local neighborhood — neighborhood_signal","text":"","code":"neighborhood_signal(neighbors, signal)"},{"path":"wonlab-cs.github.io/Vesalius/reference/neighborhood_signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute average expression of local neighborhood — neighborhood_signal","text":"neighbors list local neighbors signal count matrix feature matrix average","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/neighborhood_signal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute average expression of local neighborhood — neighborhood_signal","text":"average feature matrix. expression cell replace average expression k nearest neighbors","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/niche_composition.html","id":null,"dir":"Reference","previous_headings":"","what":"Method dispatch function for neighborhood selection - added flavor specific to composition — niche_composition","title":"Method dispatch function for neighborhood selection - added flavor specific to composition — niche_composition","text":"Method dispatch function neighborhood selection - added flavor specific composition","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/niche_composition.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Method dispatch function for neighborhood selection - added flavor specific to composition — niche_composition","text":"","code":"niche_composition(   coord,   vesalius_assay,   method,   cell_label = NULL,   k = 20,   depth = 3,   radius = 20 )"},{"path":"wonlab-cs.github.io/Vesalius/reference/niche_composition.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Method dispatch function for neighborhood selection - added flavor specific to composition — niche_composition","text":"coord data.frame - coordinates assay (barcodes, x, y) method character - method use collect neighborhood - switch matches k int - many nearest neighbors KNN algorithm depth int - graph path depth define neighborhood 0 = self, 1 = direct neigbors, 2 = neighbors neighbors, etc radius - numeric - radius around center cell signal matrix - matrix sparse matrix containing assay signal spatial indices contained coord","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/niche_composition.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Method dispatch function for neighborhood selection - added flavor specific to composition — niche_composition","text":"list cells cell types niche","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/no_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"no norm — no_norm","title":"no norm — no_norm","text":"normalisation applied simply return raw counts","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/no_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"no norm — no_norm","text":"","code":"no_norm(counts, use_count = \"raw\")"},{"path":"wonlab-cs.github.io/Vesalius/reference/no_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"no norm — no_norm","text":"counts seurat object containing counts use_count string describing name needs added list element. list appended count slot vesalius_assay.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/no_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"no norm — no_norm","text":"list seurat object used later raw counts stored vesalius objects","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/no_norm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"no norm — no_norm","text":", either user want normalise data provide custom count matrix. case, parse \"none\" avoid writing another function add custom name.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/norm_pixel.html","id":null,"dir":"Reference","previous_headings":"","what":"pixel normalisation dispatch function — norm_pixel","title":"pixel normalisation dispatch function — norm_pixel","text":"pixel normalisation dispatch function","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/norm_pixel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pixel normalisation dispatch function — norm_pixel","text":"","code":"norm_pixel(embeds, type = c(\"minmax\", \"quantile_norm\", \"z_norm\"))"},{"path":"wonlab-cs.github.io/Vesalius/reference/norm_pixel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"pixel normalisation dispatch function — norm_pixel","text":"embeds embedding vector type string \"minmax\" \"quantileNorm\"","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/norm_pixel.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"pixel normalisation dispatch function — norm_pixel","text":"pixels normalised moment miman used. Quantile needs tested.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/optimize_matching.html","id":null,"dir":"Reference","previous_headings":"","what":"optimize matching scores through batching — optimize_matching","title":"optimize matching scores through batching — optimize_matching","text":"optimize matching scores batching","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/optimize_matching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"optimize matching scores through batching — optimize_matching","text":"","code":"optimize_matching(cost_matrix, batch_size = 10000, epochs = 1, verbose = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/optimize_matching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"optimize matching scores through batching — optimize_matching","text":"cost_matrix matrix containing mapping cost cell batch_size int - number cells assigned batch verbose logical - output progress messages epoch number epochs run optimization","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/optimize_matching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"optimize matching scores through batching — optimize_matching","text":"list best matching cell pairs (data.frame) total cost epoch","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/overlap_distance_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"create a distance matrix based on mapping scores overlaps — overlap_distance_matrix","title":"create a distance matrix based on mapping scores overlaps — overlap_distance_matrix","text":"create distance matrix based mapping scores overlaps","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/overlap_distance_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create a distance matrix based on mapping scores overlaps — overlap_distance_matrix","text":"","code":"overlap_distance_matrix(score, top_nn = 10, verbose = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/overlap_distance_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create a distance matrix based on mapping scores overlaps — overlap_distance_matrix","text":"score matrix - cost matrix top_nn integer nearest neighbors verbose logical - print progress messages","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/pearson_approx.html","id":null,"dir":"Reference","previous_headings":"","what":"compute fast pearson correlation between matrices — pearson_approx","title":"compute fast pearson correlation between matrices — pearson_approx","text":"compute fast pearson correlation matrices","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/pearson_approx.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute fast pearson correlation between matrices — pearson_approx","text":"","code":"pearson_approx(seed, query)"},{"path":"wonlab-cs.github.io/Vesalius/reference/point_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"mapping points between data sets — point_mapping","title":"mapping points between data sets — point_mapping","text":"mapping points data sets","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/point_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mapping points between data sets — point_mapping","text":"","code":"point_mapping(   query_signal,   query_assay,   cost,   seed_signal,   seed_assay,   method = \"pearson\",   neighborhood = \"knn\",   k = 20,   radius = 0.05,   depth = 1,   batch_size = 10000,   epochs = 1,   use_cost = c(\"feature\", \"niche\"),   threshold = 0.5,   filter_cells = FALSE,   seed_territory_labels = \"Territory\",   query_territory_labels = \"Territory\",   seed_meta_labels = NULL,   query_meta_labels = NULL,   digits = 4,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/point_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"mapping points between data sets — point_mapping","text":"query_signal processed query signal query assay cost matrix - matrix size n (query cells) p (seed cells) containing custom cost matrix. seed_signal processed seed signal seed assay k int size niche (knn) radius 0.05 proportion max distance use radius neighborhood depth graph path depth condsider neighborhood. batch_size int number points query batch use_cost character string defining total cost computer Available: feature, niche, territory, composition (See details combinations threshold score threshold indicices removed. Scores always 0 1 verbose logical - progress console query vesalius_assay object seed vesalius_assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/point_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"mapping points between data sets — point_mapping","text":"list matched aligned coordinates query","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/populate_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"populate graph with network connections — populate_graph","title":"populate graph with network connections — populate_graph","text":"populate graph network connections","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/populate_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"populate graph with network connections — populate_graph","text":"","code":"populate_graph(chunk)"},{"path":"wonlab-cs.github.io/Vesalius/reference/populate_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"populate graph with network connections — populate_graph","text":"chunk data frame nearest neighbors","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/populate_graph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"populate graph with network connections — populate_graph","text":"data frame network connections","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/process_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"process counts — process_counts","title":"process counts — process_counts","text":"pre-process count matrices","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/process_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"process counts — process_counts","text":"","code":"process_counts(   counts,   assay,   method = \"log_norm\",   use_count = \"raw\",   nfeatures = 2000,   min_cutoff = \"q5\",   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/process_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"process counts — process_counts","text":"counts count matrix form sparse matrix assay character string describing assay pre-processed vesaliusObject vesalius_assay method character string describing normalisation method use. One following \"log_norm\", \"SCT\", \"TFIDF\", \"none\". use_count string describing counts used generating emebddings. Default = \"raw\". nfeatures numeric describing number variable features use. min_cutoff used dimensionality reduction method LSI LSI_UMAP cutoff feature included VariableFeatures object. verbose logical - progress messages outputed ","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/process_counts.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"process counts — process_counts","text":"`use_count` argument specifies count matrix used normalization. argument necessary use custom normalised count matrix. case, set argument name gave count matrix (see add_counts) `generate_embeddings` skip normalization use custom count matrix generate image embeddings.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/radius_neighborhood.html","id":null,"dir":"Reference","previous_headings":"","what":"Radius based method to select niche — radius_neighborhood","title":"Radius based method to select niche — radius_neighborhood","text":"Radius based method select niche","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/radius_neighborhood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radius based method to select niche — radius_neighborhood","text":"","code":"radius_neighborhood(coord, radius)"},{"path":"wonlab-cs.github.io/Vesalius/reference/radius_neighborhood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Radius based method to select niche — radius_neighborhood","text":"coord data.frame - coordinates spatial indices assay radius - numeric - radius around center cell","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/radius_neighborhood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Radius based method to select niche — radius_neighborhood","text":"list containing barcodes nearest neighbors spatial index.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/rasterise.html","id":null,"dir":"Reference","previous_headings":"","what":"rasterise tiles — rasterise","title":"rasterise tiles — rasterise","text":"fill tiles pixel - rasterisation","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/rasterise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rasterise tiles — rasterise","text":"","code":"rasterise(filtered)"},{"path":"wonlab-cs.github.io/Vesalius/reference/rasterise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rasterise tiles — rasterise","text":"filtered data.frame voronoi tile coordinates","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/rasterise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rasterise tiles — rasterise","text":"data frame barcodes associated pixels.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/rasterise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rasterise tiles — rasterise","text":", take tile cooridnates fill pixels. Essentially, voronoi tile can discretised series pixels achieve reconstructing polygon tesselation coordinates finding discrete value fall within polygon. Note polygon coordinates need \"convexified\". Essentially, order coordinates maters order coordinates recontructing polygon (see convexify)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/rebalence_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"rebalence colors — rebalence_colors","title":"rebalence colors — rebalence_colors","text":"rebalence colors","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/rebalence_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rebalence colors — rebalence_colors","text":"","code":"rebalence_colors(coordinates, dimensions, method = \"minmax\")"},{"path":"wonlab-cs.github.io/Vesalius/reference/rebalence_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"rebalence colors — rebalence_colors","text":"coordinates data frame containing barcodes, x/y coord, origin, color value. dimensions number dimensions select plotting method character string: min max truncate","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/rebalence_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"rebalence colors — rebalence_colors","text":"data frame [0,1] bound values","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/rebalence_colors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"rebalence colors — rebalence_colors","text":"function use re-bound values 0 1. image processing steps may lead negative values introduced. Imager handles without issue plotting want make sure values indeed bound 0 1. try different methods either truncate value min max norm.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/reduce_tensor_resolution.html","id":null,"dir":"Reference","previous_headings":"","what":"reduce tensor resoltuon — reduce_tensor_resolution","title":"reduce tensor resoltuon — reduce_tensor_resolution","text":"reduce size image tensor merging barcodes together compressing coordinates values","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/reduce_tensor_resolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"reduce tensor resoltuon — reduce_tensor_resolution","text":"","code":"reduce_tensor_resolution(coordinates, tensor_resolution = 1)"},{"path":"wonlab-cs.github.io/Vesalius/reference/reduce_tensor_resolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"reduce tensor resoltuon — reduce_tensor_resolution","text":"coordinates data frame barcode coordinates tensor_resolution numeric (range 0 - 1) describing compression ratio applied final image. Default = 1","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/reduce_tensor_resolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"reduce tensor resoltuon — reduce_tensor_resolution","text":"data frame barcodes, x coordinates","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/reduce_tensor_resolution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"reduce tensor resoltuon — reduce_tensor_resolution","text":"compress coordinates, retain barcodes. barcode overlap marged together. respective counts also merged together. allows us retain barcodes downstream analysis.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/regularise.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal regularise function. performs total variance regularisation — regularise","title":"Internal regularise function. performs total variance regularisation — regularise","text":"Internal regularise function. performs total variance regularisation","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/regularise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal regularise function. performs total variance regularisation — regularise","text":"","code":"regularise(img, lambda = 1, niter = 100)"},{"path":"wonlab-cs.github.io/Vesalius/reference/regularise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal regularise function. performs total variance regularisation — regularise","text":"img image array - generally matrix lambda lambda value regularisation niter numeric number rounds regularisation","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/regularise_image.html","id":null,"dir":"Reference","previous_headings":"","what":"regularise image — regularise_image","title":"regularise image — regularise_image","text":"regularise_image denoise Vesalius images via variance regularization","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/regularise_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"regularise image — regularise_image","text":"","code":"regularise_image(   vesalius_assay,   dimensions = seq(1, 3),   embedding = \"last\",   lambda = 1,   niter = 100,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/regularise_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"regularise image — regularise_image","text":"vesalius_assay vesalius_assay object dimensions numeric vector latent space dimensions use. embedding character string describing embedding used. lambda numeric - positive real numbers describing regularization parameter (see details) niter numeric - number variance regularization iterations (Default = 100) verbose logical - progress message output.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/regularise_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"regularise image — regularise_image","text":"vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/regularise_image.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"regularise image — regularise_image","text":"Image regularization can seen form image denoising. Details method can found tvR package denoise2 function https://cran.r-project.org/web/packages/tvR/tvR.pdf. higher value lambda results smoother image. noted context spatial omics sparse points data (space coordinates), need increase value lambda obtain better denoising.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/regularise_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"regularise image — regularise_image","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run ves <- build_vesalius_embeddings(ves)  # simple regularisation ves <- regularise_image(ves, embedding = \"PCA\") } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/rename_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"renaming counts to remain consistent with vesalius nomenclature — rename_counts","title":"renaming counts to remain consistent with vesalius nomenclature — rename_counts","text":"renaming counts remain consistent vesalius nomenclature","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/rename_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"renaming counts to remain consistent with vesalius nomenclature — rename_counts","text":"","code":"rename_counts(integrated, seed_cells, seed_genes, query_cells, query_genes)"},{"path":"wonlab-cs.github.io/Vesalius/reference/rename_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"renaming counts to remain consistent with vesalius nomenclature — rename_counts","text":"integrated seurat object containing integrated count data seed_cells character vector contain seed barcodes seed_genes character vector contain seed genes query_cells character vector contain query barcodes query_genes character vector contain query genes","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/rename_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"renaming counts to remain consistent with vesalius nomenclature — rename_counts","text":"list count matrices cell gene names added matrix renamed follow vesalius nomencalture","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/score_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract score from best matches — score_matches","title":"Extract score from best matches — score_matches","text":"Extract score best matches","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/score_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract score from best matches — score_matches","text":"","code":"score_matches(matched_indices, cost, use_cost)"},{"path":"wonlab-cs.github.io/Vesalius/reference/score_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract score from best matches — score_matches","text":"matched_indices matrix - best matches seed query cost list - cost list essentially scores use_cost character - scores added assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/score_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract score from best matches — score_matches","text":"data frame containing matched indices associated cost scores","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/search_log.html","id":null,"dir":"Reference","previous_headings":"","what":"search through log for parameter values or names — search_log","title":"search through log for parameter values or names — search_log","text":"search log parameter values names","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/search_log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"search through log for parameter values or names — search_log","text":"","code":"search_log(vesalius_assay, arg, return_assay = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/search_log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"search through log for parameter values or names — search_log","text":"vesalius_assay vesalius_assay object arg string indicating parameter value argument name searched return_assay logical indicating log list returned value.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/search_log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"search through log for parameter values or names — search_log","text":"either list containing log calls values found call","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/search_log.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"search through log for parameter values or names — search_log","text":"may search log see used certain parameters values use running certain trial. `return_assay` `TRUE` entire log call returned. include parameter values including defaults parse function.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/search_log.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"search through log for parameter values or names — search_log","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run  ves <- build_vesalius_embeddings(ves) # maybe we want to try a different method  # both will be stored in the object ves <- build_vesalius_embeddings(ves, dim_reduction = \"UMAP\")  # search log  search_log(ves, \"tensor_resolution\") } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/segment_image.html","id":null,"dir":"Reference","previous_headings":"","what":"segment image — segment_image","title":"segment image — segment_image","text":"segment vesalius images find initial territories","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/segment_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"segment image — segment_image","text":"","code":"segment_image(   vesalius_assay,   dimensions = seq(1, 3),   embedding = \"last\",   method = \"kmeans\",   col_resolution = 10,   compactness = 1,   scaling = 0.5,   threshold = 0.9,   index_selection = \"bubble\",   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/segment_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"segment image — segment_image","text":"vesalius_assay vesalius_assay object dimensions numeric vector latent space dimensions use. embedding character string describing embedding used. method character string method used segmentation. Select \"kmeans\", \"louvain\", \"leiden\", \"slic\", \"leiden_slic\",\"louvain_slic\",\"som\" col_resolution numeric colour resolution used segmentation. (see details) compactness numeric - factor defining super pixel compaction. scaling numeric - scaling image ration super pixel segmentation. threshold numeric [0,1] - correlation threshold nearest neighbors generating segments super pixels. verbose logical - progress message output. k numeric - number closest super pixel neighbors consider generating segments super pixels","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/segment_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"segment image — segment_image","text":"vesalius_assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/segment_image.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"segment image — segment_image","text":"Applying image segmentation ensures reduction colour complexity. Vesalius provides 7 different methods clustering colours reducing color complexity: **Kmeans**, **Louvain**, **Leiden**, **slic**, **leiden_slic**, **louvain_slic**, **som** case kmeans clustering col_resolution argument shows number colours images reduced . case, col_resolution integer suggest first looking values 3 20. case **leiden** **louvain** clustering, col_resolution granularity clustering. case, suggest using values 0.01 1 start . recommned uisng **louvain** clustering **leiden** context. case slic, col_resolution define number starting points used generate super pixels. Depending number points assay, suggested using 10 number points starting point. example,  1000 spatial indices, can set col_resolution 100. optimal col_resolution depend interest biological question hand. might interested less granular territories. Along smoothing, number segments one way control granularity.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/segment_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"segment image — segment_image","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run ves <- build_vesalius_embeddings(ves)  # simple smoothing ves <- smooth_image(ves, dimensions = seq(1, 30))  # quick segmentation ves <- segment_image(ves, dimensions = seq(1, 30)) } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/select_initial_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"select inital indices — select_initial_indices","title":"select inital indices — select_initial_indices","text":"select inital indices","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/select_initial_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"select inital indices — select_initial_indices","text":"","code":"select_initial_indices(   coordinates,   embeddings,   type = \"bubble\",   n_centers = 500,   max_iter = 500 )"},{"path":"wonlab-cs.github.io/Vesalius/reference/select_initial_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"select inital indices — select_initial_indices","text":"coordinates data frame containing spatial coordinates beads embeddings matrix containing embedding values - full pixel image n_centers numeric number beads select super pixel centers max_iter numeric number iteration returning result coveregnce.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/select_initial_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"select inital indices — select_initial_indices","text":"barcodes starting coordinates","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/signal_similarity.html","id":null,"dir":"Reference","previous_headings":"","what":"compute the similarity between seed and query signals — signal_similarity","title":"compute the similarity between seed and query signals — signal_similarity","text":"compute similarity seed query signals","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/signal_similarity.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"compute the similarity between seed and query signals — signal_similarity","text":"","code":"signal_similarity(seed, query, method = \"pearson\", digits = 4)"},{"path":"wonlab-cs.github.io/Vesalius/reference/signal_similarity.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"compute the similarity between seed and query signals — signal_similarity","text":"seed seed signal query query signal","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/signal_similarity.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"compute the similarity between seed and query signals — signal_similarity","text":"matrix query rows seed colmuns","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/signal_similarity.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"compute the similarity between seed and query signals — signal_similarity","text":"Chunking cost signal smaller chunks run correlation score paralell. room improvement . First dispatch longer list future_lapply know one need know can subset cost. Also functions calls feature_cost R wrapper c++ function (cost.cpp).","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/smooth_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth Image — smooth_image","title":"Smooth Image — smooth_image","text":"Apply iterative smoothing Vesalius images","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/smooth_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth Image — smooth_image","text":"","code":"smooth_image(   vesalius_assay,   dimensions = seq(1, 3),   embedding = \"last\",   method = \"iso\",   iter = 1,   sigma = 1,   box = 20,   threshold = 0,   neuman = TRUE,   gaussian = TRUE,   na.rm = FALSE,   across_levels = \"min\",   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/smooth_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth Image — smooth_image","text":"vesalius_assay vesalius_assay object dimensions numeric vector latent space dimensions use. embedding character string describing embedding used. method character describing smoothing method use \"median\" , \"iso\"  \"box\" combination . iter numeric - number smoothing iteration sigma numeric - standard deviation associated isoblur (Gaussian) box numeric describing box size (centered around center pixel) smoothing threshold numeric - discard pixels low value (cutoff threshold applied box/median blurs). neuman logical describing Neumann boundary conditions used, Dirichlet otherwise (default true, Neumann) gaussian logical - use gaussian filter na.rm logical describing NA values removed across_levels character - method used account multiple smoothing levels (see details). Select : \"min\",\"mean\", \"max\" verbose logical - progress message output.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/smooth_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Smooth Image — smooth_image","text":"vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/smooth_image.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Smooth Image — smooth_image","text":"smooth_image function provides series options smooth grey scale images contained within vesalius_assay object. can select number dimensions smoothed. default, take first 3 dimensions. Vesalius provides 3 smoothing methods:  * median: computes median color box (box size defined box)  * box: computes max color value box (box size defined box)  * iso: compute gaussian kernel using sigma (Gussian SD defined sigma) Vesalius can apply smoothing paramters multiple iterations defined iter argument. also possible provide multiple values box sigma numeric vectors. Vesalius run smoothing provided values return either maximum, minimum mean color value described across_levels argument. Please note unless specified smoothing always applied active embedding (default last embedding computed). want start can simply set embedding ever embedding want work . take raw embedding values image processing applied. need re-run embedding satisfied smoothing. information, suggest reading imager vignette.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/smooth_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Smooth Image — smooth_image","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run ves <- build_vesalius_embeddings(ves)  # simple smoothing ves <- smooth_image(ves, embedding = \"PCA\") # multiple rounds ves <- smooth_image(ves, iter = 3, embedding = \"PCA\") # accross level ves <- smooth_image(ves, box = seq(3,11),  accross_level = \"mean\",  embedding = \"PCA\") } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/summarise_territories.html","id":null,"dir":"Reference","previous_headings":"","what":"summarise territories — summarise_territories","title":"summarise territories — summarise_territories","text":"summarise territories","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/summarise_territories.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"summarise territories — summarise_territories","text":"","code":"summarise_territories(vesalius_assay, as_log = FALSE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/summarise_territories.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"summarise territories — summarise_territories","text":"vesalius_assay vesalius assay object as_log logical defining log list returned","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/summarise_territories.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"summarise territories — summarise_territories","text":"list containing summary territory transformation manipulations.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_morphing.html","id":null,"dir":"Reference","previous_headings":"","what":"territory_morphing applies morphological operators to a set of territoriees — territory_morphing","title":"territory_morphing applies morphological operators to a set of territoriees — territory_morphing","text":"territory_morphing applies morphological operators set territoriees","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_morphing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"territory_morphing applies morphological operators to a set of territoriees — territory_morphing","text":"","code":"territory_morphing(   vesalius_assay,   territory = NULL,   trial = \"last\",   morphology_factor = 0,   verbose = TRUE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_morphing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"territory_morphing applies morphological operators to a set of territoriees — territory_morphing","text":"vesalius_assay vesalius_assay object territory integer vector integers desrcining territories morph. trial character string - territory trial used select territorires. Default last one computed morphology_factor integer vector integers describing growth /shrink extent. verbose logical - progress message output.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_morphing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"territory_morphing applies morphological operators to a set of territoriees — territory_morphing","text":"vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_morphing.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"territory_morphing applies morphological operators to a set of territoriees — territory_morphing","text":"Territory morphing can manipulate territories growing, shrinking, filling, cleaning territories. Growing = Positive integers - Territory dilated x number pixels Shrinking = Negative integers - Territory contracted x number pixels Filling = grow followed shrink. Cleaning = shrink followed grow.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_morphing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"territory_morphing applies morphological operators to a set of territoriees — territory_morphing","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run ves <- build_vesalius_embeddings(ves)  # simple smoothing ves <- smooth_image(ves, dimensions = seq(1, 30))  # quick segmentation ves <- segment_image(ves, dimensions = seq(1, 30))  # isolate territories ves <- isolate_territories(ves)  # morph territory  ves <- territory_morphing(ves, 8, morphology_factor = 30) ves <- terriotry_morphing(ves, 1, morpholgy_factor = c(-15, 15))  # view territory morphing territory_plot(ves) } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_neighborhood.html","id":null,"dir":"Reference","previous_headings":"","what":"Territory selection for large scale niche — territory_neighborhood","title":"Territory selection for large scale niche — territory_neighborhood","text":"Territory selection large scale niche","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_neighborhood.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Territory selection for large scale niche — territory_neighborhood","text":"","code":"territory_neighborhood(coord)"},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_neighborhood.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Territory selection for large scale niche — territory_neighborhood","text":"coord data.frame - coordinates spatial indices assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_neighborhood.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Territory selection for large scale niche — territory_neighborhood","text":"list containing barcodes spatial indices territory","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"territory_plot - plotting Vesalius territories — territory_plot","title":"territory_plot - plotting Vesalius territories — territory_plot","text":"territory_plot - plotting Vesalius territories","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"territory_plot - plotting Vesalius territories — territory_plot","text":"","code":"territory_plot(   vesalius_assay,   trial = \"last\",   split = FALSE,   highlight = NULL,   contour = \"None\",   randomise = TRUE,   cex = 10,   cex_pt = 1,   alpha = 0.65,   use_image = FALSE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"territory_plot - plotting Vesalius territories — territory_plot","text":"vesalius_assay vesalius_Assay object trial character string describing segmentation trial use. Default \"last\" last segmentation trial used. split logical - TRUE, territories plotted separate panels highlight numeric vector describing territories highlighted. contour territory contours added. Availble: \"None\", \"convex\", \"concave\" randomise logical - TRUE, colour palette randomised. cex numeric describing font size multiplier. cex_pt numeric describing point size multiplier. alpha opacity factor ]0,1[","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"territory_plot - plotting Vesalius territories — territory_plot","text":"ggplot object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"territory_plot - plotting Vesalius territories — territory_plot","text":"Territory plots show territories false colour isolated Vesalius image. Note function can applied image segments, territories, layers.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/territory_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"territory_plot - plotting Vesalius territories — territory_plot","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run ves <- build_vesalius_embeddings(ves)  # simple smoothing ves <- smooth_image(ves, dimensions = seq(1, 30))  # quick segmentation ves <- segment_image(ves, dimensions = seq(1, 30))  # isolate territories ves <- isolate_territories(ves)  # Plot Territories p <- territory_plot(ves) } # }"},{"path":"wonlab-cs.github.io/Vesalius/reference/tfidf_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"tf idf normalisation — tfidf_norm","title":"tf idf normalisation — tfidf_norm","text":"nornalising count using TF IDF","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/tfidf_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"tf idf normalisation — tfidf_norm","text":"","code":"tfidf_norm(counts, min_cutoff)"},{"path":"wonlab-cs.github.io/Vesalius/reference/tfidf_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"tf idf normalisation — tfidf_norm","text":"counts Seurat object containing counts min_cutoff min cutoff top features list seurat object used later normalised counts stored vesalius object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/unpack_territory_path.html","id":null,"dir":"Reference","previous_headings":"","what":"retrieve the points contained in the edge of each territory — unpack_territory_path","title":"retrieve the points contained in the edge of each territory — unpack_territory_path","text":"retrieve points contained edge territory","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/unpack_territory_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"retrieve the points contained in the edge of each territory — unpack_territory_path","text":"","code":"unpack_territory_path(trial, tiles, method = \"none\")"},{"path":"wonlab-cs.github.io/Vesalius/reference/unpack_territory_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"retrieve the points contained in the edge of each territory — unpack_territory_path","text":"trial name territory trial selected tiles vesalius tiles method string - method territories edges selected","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/unpack_territory_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"retrieve the points contained in the edge of each territory — unpack_territory_path","text":"data frame containing edge territory.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/unpack_territory_path.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"retrieve the points contained in the edge of each territory — unpack_territory_path","text":"using convex start point. Essentially, order coordinates based polar coordinates using median coordinate center point.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/update_matches.html","id":null,"dir":"Reference","previous_headings":"","what":"Update best matched cell pairs with new mapping costs — update_matches","title":"Update best matched cell pairs with new mapping costs — update_matches","text":"Update best matched cell pairs new mapping costs","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/update_matches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update best matched cell pairs with new mapping costs — update_matches","text":"","code":"update_matches(matched, mapped, epoch)"},{"path":"wonlab-cs.github.io/Vesalius/reference/update_matches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update best matched cell pairs with new mapping costs — update_matches","text":"matched data frame containing mapping pairs template mapped best mapping pairs batch epoch int - epoch optimal match found","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/update_matches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update best matched cell pairs with new mapping costs — update_matches","text":"updated matched data frame","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/update_vesalius_assay.html","id":null,"dir":"Reference","previous_headings":"","what":"update vesalius assay object — update_vesalius_assay","title":"update vesalius assay object — update_vesalius_assay","text":"update vesalius assay object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/update_vesalius_assay.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"update vesalius assay object — update_vesalius_assay","text":"","code":"update_vesalius_assay(vesalius_assay, data, slot, append = TRUE)"},{"path":"wonlab-cs.github.io/Vesalius/reference/update_vesalius_assay.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"update vesalius assay object — update_vesalius_assay","text":"vesalius_assay vesalius_assay object data data inserted vesalius_assay slot name slot updated append logical dats hould appended already existing data","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/update_vesalius_assay.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"update vesalius assay object — update_vesalius_assay","text":"vesalius_assay","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_assay-class.html","id":null,"dir":"Reference","previous_headings":"","what":"The vesalius_assay class — vesalius_assay-class","title":"The vesalius_assay class — vesalius_assay-class","text":"vesalius_assay class functional unit vesalius. assay stored within class contains required information run analysis assay choice. object, can find spatial tiles, image embeddings, spatial territories, differentially expressed genes (DEG), count matrices (raw normalised), microscopy images (present) functional log lets see run object.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_assay-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"The vesalius_assay class — vesalius_assay-class","text":"assay character assay name tiles data.frame containing spatial coordinates pixels tiles computed embeddings list containing latent space embeddings form data.frames. active matrix containing active embedding data territories data.frame containing spatial color segments, spatial territories, layers. DEG list data.frame differentially gene expression trial counts list containing count matrices. Raw normalised stored named normalisation method used. image list containing associated microscopy images (implemented) log list containing analysis history object.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal differantial gene expression function. — vesalius_deg","title":"Internal differantial gene expression function. — vesalius_deg","text":"function dispatches groups various methods avialbale","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal differantial gene expression function. — vesalius_deg","text":"","code":"vesalius_deg(   seed,   query,   seed_id,   query_id,   method,   log_fc,   pval,   min_pct,   min_spatial_index,   verbose = TRUE,   args )"},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal differantial gene expression function. — vesalius_deg","text":"seed = group1 count data query = group 2 count data seed_id = territory ID's group 1 query_id = territory ID's group 2 method = DEG stat method log_fc = fold change threshold pval = p value threshold min_pct = minimum percentage barcodes contain given gene min_spatial_index = minimum number barcodes present territory verbose = progress message output args arguments parse (...) upper level function (functional)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_chisq.html","id":null,"dir":"Reference","previous_headings":"","what":"chisq test for DEG — vesalius_deg_chisq","title":"chisq test for DEG — vesalius_deg_chisq","text":"chisq test DEG","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_chisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"chisq test for DEG — vesalius_deg_chisq","text":"","code":"vesalius_deg_chisq(seed, seed_id, query, query_id, params)"},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_chisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"chisq test for DEG — vesalius_deg_chisq","text":"seed count matrix group 1 seed_id territory used group 1 query count matrix group 2 query_id territory used group 2 params parameter value list (pval, log_fc, min_pct)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_deseq2.html","id":null,"dir":"Reference","previous_headings":"","what":"DESeq negatove binomail for DEG — vesalius_deg_deseq2","title":"DESeq negatove binomail for DEG — vesalius_deg_deseq2","text":"DESeq negatove binomail DEG","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_deseq2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DESeq negatove binomail for DEG — vesalius_deg_deseq2","text":"","code":"vesalius_deg_deseq2(seed, seed_id, query, query_id, params)"},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_deseq2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DESeq negatove binomail for DEG — vesalius_deg_deseq2","text":"seed count matrix group 1 seed_id territory used group 1 query count matrix group 2 query_id territory used group 2 params parameter value list (pval, log_fc, min_pct)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_edger.html","id":null,"dir":"Reference","previous_headings":"","what":"edgeR functions for DEG — vesalius_deg_edger","title":"edgeR functions for DEG — vesalius_deg_edger","text":"edgeR functions DEG","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_edger.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"edgeR functions for DEG — vesalius_deg_edger","text":"","code":"vesalius_deg_edger(seed, seed_id, query, query_id, params, type)"},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_edger.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"edgeR functions for DEG — vesalius_deg_edger","text":"seed count matrix group 1 seed_id territory used group 1 query count matrix group 2 query_id territory used group 2 params parameter value list (pval, log_fc, min_pct) type either \"QLF\" quasi-likelihood F-test \"LRT\" fpr likelihood ratio test","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_fisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Fisher's excat test for DEG — vesalius_deg_fisher","title":"Fisher's excat test for DEG — vesalius_deg_fisher","text":"Fisher's excat test DEG","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_fisher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fisher's excat test for DEG — vesalius_deg_fisher","text":"","code":"vesalius_deg_fisher(seed, seed_id, query, query_id, params)"},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_fisher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fisher's excat test for DEG — vesalius_deg_fisher","text":"seed count matrix group 1 seed_id territory used group 1 query count matrix group 2 query_id territory used group 2 params parameter value list (pval, log_fc, min_pct)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_logit.html","id":null,"dir":"Reference","previous_headings":"","what":"Logistic Regression for DEG — vesalius_deg_logit","title":"Logistic Regression for DEG — vesalius_deg_logit","text":"Logistic Regression DEG","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_logit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logistic Regression for DEG — vesalius_deg_logit","text":"","code":"vesalius_deg_logit(seed, seed_id, query, query_id, params)"},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_logit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logistic Regression for DEG — vesalius_deg_logit","text":"seed count matrix group 1 seed_id territory used group 1 query count matrix group 2 query_id territory used group 2 params parameter value list (pval, log_fc, min_pct)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_ttest.html","id":null,"dir":"Reference","previous_headings":"","what":"t.test for DEG — vesalius_deg_ttest","title":"t.test for DEG — vesalius_deg_ttest","text":"t.test DEG","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_ttest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"t.test for DEG — vesalius_deg_ttest","text":"","code":"vesalius_deg_ttest(seed, seed_id, query, query_id, params)"},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_ttest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"t.test for DEG — vesalius_deg_ttest","text":"seed count matrix group 1 seed_id territory used group 1 query count matrix group 2 query_id territory used group 2 params parameter value list (pval, log_fc, min_pct)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_wilcox.html","id":null,"dir":"Reference","previous_headings":"","what":"wilcox rank sum test for DEG — vesalius_deg_wilcox","title":"wilcox rank sum test for DEG — vesalius_deg_wilcox","text":"wilcox rank sum test DEG","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_wilcox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"wilcox rank sum test for DEG — vesalius_deg_wilcox","text":"","code":"vesalius_deg_wilcox(seed, seed_id, query, query_id, params)"},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_deg_wilcox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"wilcox rank sum test for DEG — vesalius_deg_wilcox","text":"seed count matrix group 1 seed_id territory used group 1 query count matrix group 2 query_id territory used group 2 params parameter value list (pval, log_fc, min_pct)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/vesalius_package.html","id":null,"dir":"Reference","previous_headings":"","what":"vesalius — vesalius_package","title":"vesalius — vesalius_package","text":"Vesalius: Spatial Omics analysis using images processing","code":""},{"path":[]},{"path":"wonlab-cs.github.io/Vesalius/reference/view_gene_expression.html","id":null,"dir":"Reference","previous_headings":"","what":"view_gene_expression — view_gene_expression","title":"view_gene_expression — view_gene_expression","text":"View gene expression spatial omics data, specific territories expression genes subset cells.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/view_gene_expression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"view_gene_expression — view_gene_expression","text":"","code":"view_gene_expression(   vesalius_assay,   genes = NULL,   norm_method = \"last\",   trial = \"last\",   territory_1 = NULL,   territory_2 = NULL,   cells = NULL,   norm = TRUE,   as_layer = FALSE,   with_background = FALSE,   cex = 10,   cex_pt = 1,   alpha = 0.75,   max_size = 5,   return_as_list = FALSE )"},{"path":"wonlab-cs.github.io/Vesalius/reference/view_gene_expression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"view_gene_expression — view_gene_expression","text":"vesalius_assay vesalius_assay object genes character vector containing genes wish visualise. norm_method character string - count matrix used. trial character string describing segmentation trial use. Default \"last\" last trial used. territory_1 integer vector integers descrbing territories group 1 (see details) territory_2 integer vector integers descrbing territories group 2 (see details) cells charactor vector containing barcodes/spatial_indices associated cell types interest (see details) norm logical indicating expression min/max normalised as_layer logical indicating expression represented territory/ layer. cex numeric - font size modulator cex_pt numeric point size alpha point transparency return_as_list logical - plot returned simple list ggplot object (single gene)/ patchwork object (multiple genes)","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/view_gene_expression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"view_gene_expression — view_gene_expression","text":"ggplot object","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/view_gene_expression.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"view_gene_expression — view_gene_expression","text":"Vesalius offers plotting function allows visualise gene expression. function offers multiple options depending provide. 1. Overall expression can visualise overall expression pattern set genes providing vesalius_assay object containing counts. as_layer set FALSE show expression sptial index indivdually. set TRUE, show average expression gene territories present. 2. Expression territory can visualise expression gene isolated territory. 3. Expression cells one territory want visualise expression specific cells, can parse character vector containing cells interest. function automatically subset relevant territory data show expression spatial indeces hat associated cell type interest. can use option contrast expression cells territories also providing territories wish contrast (`territory_1` `territory_2`). single territory provided, vesalius shows cell territory. provide one gene, `view_gene_expression` return ggarrange list containing genes individual plots.","code":""},{"path":"wonlab-cs.github.io/Vesalius/reference/view_gene_expression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"view_gene_expression — view_gene_expression","text":"","code":"if (FALSE) { # \\dontrun{ data(vesalius) # First we build a simple object ves <- build_vesalius_object(coordinates, counts) # We can do a simple run ves <- build_vesalius_embeddings(ves)  # simple smoothing ves <- smooth_image(ves, dimensions = seq(1, 30))  # quick segmentation ves <- segment_image(ves, dimensions = seq(1, 30))  # isolate territories ves <- isolate_territories(ves)  # view over all expression p <- view_gene_expression(ves, genes = \"Malat1\") p1 <- view_gene_expression(ves, genes = \"Malat1\", as_layer = TRUE)  # view expression in isolated territory  p2 <- view_gene_expression(ves, genes = \"Malat1\", territory_1 = 5)  # view expression of cells cells <- sample(colnames(get_counts(ves)),300) p3 <- view_gene_expression(ves,  genes = \"Malat\",  cells = cells,  territory_1 = 5,  terriotry_2 = 8) } # }"},{"path":[]},{"path":"wonlab-cs.github.io/Vesalius/news/index.html","id":"vesalius-website-2-0-0","dir":"Changelog","previous_headings":"","what":"Vesalius Website","title":"vesalius 2.0.0","text":"Bulding fresh web page","code":""},{"path":"wonlab-cs.github.io/Vesalius/news/index.html","id":"bugs-2-0-0","dir":"Changelog","previous_headings":"","what":"Bugs","title":"vesalius 2.0.0","text":"Comming Soon (saying bug free)","code":""},{"path":[]}]
